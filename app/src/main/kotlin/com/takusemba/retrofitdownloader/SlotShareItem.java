// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/share.proto at 19:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / Represents a shared item about the broadcast slot
 */
public final class SlotShareItem extends Message<SlotShareItem, SlotShareItem.Builder> {
  public static final ProtoAdapter<SlotShareItem> ADAPTER = new ProtoAdapter_SlotShareItem();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ID = "";

  public static final String DEFAULT_STATUS = "";

  public static final Long DEFAULT_CREATEDAT = 0L;

  /**
   * / Item ID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String id;

  /**
   * / Returns a Twitter user, if shared on Twitter.
   */
  @WireField(
      tag = 2,
      adapter = "tv.abema.protos.TwitterUser#ADAPTER"
  )
  public final TwitterUser twitter;

  /**
   * reserved 3 to 9; /// Reserved for supporting multi sns providers
   * reserved "facebook", "google"; /// Reserved for supporting multi sns providers
   * / User status
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String status;

  /**
   * / Created at (unix time)
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long createdAt;

  public SlotShareItem(String id, TwitterUser twitter, String status, Long createdAt) {
    this(id, twitter, status, createdAt, ByteString.EMPTY);
  }

  public SlotShareItem(String id, TwitterUser twitter, String status, Long createdAt, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.twitter = twitter;
    this.status = status;
    this.createdAt = createdAt;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.twitter = twitter;
    builder.status = status;
    builder.createdAt = createdAt;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SlotShareItem)) return false;
    SlotShareItem o = (SlotShareItem) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(twitter, o.twitter)
        && Internal.equals(status, o.status)
        && Internal.equals(createdAt, o.createdAt);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (twitter != null ? twitter.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (createdAt != null ? createdAt.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (twitter != null) builder.append(", twitter=").append(twitter);
    if (status != null) builder.append(", status=").append(status);
    if (createdAt != null) builder.append(", createdAt=").append(createdAt);
    return builder.replace(0, 2, "SlotShareItem{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<SlotShareItem, Builder> {
    public String id;

    public TwitterUser twitter;

    public String status;

    public Long createdAt;

    public Builder() {
    }

    /**
     * / Item ID
     */
    public Builder id(String id) {
      this.id = id;
      return this;
    }

    /**
     * / Returns a Twitter user, if shared on Twitter.
     */
    public Builder twitter(TwitterUser twitter) {
      this.twitter = twitter;
      return this;
    }

    /**
     * reserved 3 to 9; /// Reserved for supporting multi sns providers
     * reserved "facebook", "google"; /// Reserved for supporting multi sns providers
     * / User status
     */
    public Builder status(String status) {
      this.status = status;
      return this;
    }

    /**
     * / Created at (unix time)
     */
    public Builder createdAt(Long createdAt) {
      this.createdAt = createdAt;
      return this;
    }

    @Override
    public SlotShareItem build() {
      return new SlotShareItem(id, twitter, status, createdAt, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SlotShareItem extends ProtoAdapter<SlotShareItem> {
    ProtoAdapter_SlotShareItem() {
      super(FieldEncoding.LENGTH_DELIMITED, SlotShareItem.class);
    }

    @Override
    public int encodedSize(SlotShareItem value) {
      return (value.id != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.id) : 0)
          + (value.twitter != null ? TwitterUser.ADAPTER.encodedSizeWithTag(2, value.twitter) : 0)
          + (value.status != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.status) : 0)
          + (value.createdAt != null ? ProtoAdapter.INT64.encodedSizeWithTag(11, value.createdAt) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SlotShareItem value) throws IOException {
      if (value.id != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.id);
      if (value.twitter != null) TwitterUser.ADAPTER.encodeWithTag(writer, 2, value.twitter);
      if (value.status != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.status);
      if (value.createdAt != null) ProtoAdapter.INT64.encodeWithTag(writer, 11, value.createdAt);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SlotShareItem decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.twitter(TwitterUser.ADAPTER.decode(reader)); break;
          case 10: builder.status(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.createdAt(ProtoAdapter.INT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SlotShareItem redact(SlotShareItem value) {
      Builder builder = value.newBuilder();
      if (builder.twitter != null) builder.twitter = TwitterUser.ADAPTER.redact(builder.twitter);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
