// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/fresh.proto at 79:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / Freshユーザー情報
 */
public final class FreshUser extends Message<FreshUser, FreshUser.Builder> {
  public static final ProtoAdapter<FreshUser> ADAPTER = new ProtoAdapter_FreshUser();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ID = "";

  public static final String DEFAULT_DISPLAYNAME = "";

  public static final String DEFAULT_USERNAME = "";

  public static final Integer DEFAULT_FOLLOWINGCOUNT = 0;

  /**
   * / ユーザーID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String id;

  /**
   * / ユーザー表示名
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String displayName;

  /**
   * / ユーザーコード
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String username;

  /**
   * / フォロー数
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer followingCount;

  public FreshUser(String id, String displayName, String username, Integer followingCount) {
    this(id, displayName, username, followingCount, ByteString.EMPTY);
  }

  public FreshUser(String id, String displayName, String username, Integer followingCount, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.displayName = displayName;
    this.username = username;
    this.followingCount = followingCount;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.displayName = displayName;
    builder.username = username;
    builder.followingCount = followingCount;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof FreshUser)) return false;
    FreshUser o = (FreshUser) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(displayName, o.displayName)
        && Internal.equals(username, o.username)
        && Internal.equals(followingCount, o.followingCount);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (displayName != null ? displayName.hashCode() : 0);
      result = result * 37 + (username != null ? username.hashCode() : 0);
      result = result * 37 + (followingCount != null ? followingCount.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (displayName != null) builder.append(", displayName=").append(displayName);
    if (username != null) builder.append(", username=").append(username);
    if (followingCount != null) builder.append(", followingCount=").append(followingCount);
    return builder.replace(0, 2, "FreshUser{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<FreshUser, Builder> {
    public String id;

    public String displayName;

    public String username;

    public Integer followingCount;

    public Builder() {
    }

    /**
     * / ユーザーID
     */
    public Builder id(String id) {
      this.id = id;
      return this;
    }

    /**
     * / ユーザー表示名
     */
    public Builder displayName(String displayName) {
      this.displayName = displayName;
      return this;
    }

    /**
     * / ユーザーコード
     */
    public Builder username(String username) {
      this.username = username;
      return this;
    }

    /**
     * / フォロー数
     */
    public Builder followingCount(Integer followingCount) {
      this.followingCount = followingCount;
      return this;
    }

    @Override
    public FreshUser build() {
      return new FreshUser(id, displayName, username, followingCount, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_FreshUser extends ProtoAdapter<FreshUser> {
    ProtoAdapter_FreshUser() {
      super(FieldEncoding.LENGTH_DELIMITED, FreshUser.class);
    }

    @Override
    public int encodedSize(FreshUser value) {
      return (value.id != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.id) : 0)
          + (value.displayName != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.displayName) : 0)
          + (value.username != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.username) : 0)
          + (value.followingCount != null ? ProtoAdapter.INT32.encodedSizeWithTag(4, value.followingCount) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, FreshUser value) throws IOException {
      if (value.id != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.id);
      if (value.displayName != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.displayName);
      if (value.username != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.username);
      if (value.followingCount != null) ProtoAdapter.INT32.encodeWithTag(writer, 4, value.followingCount);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public FreshUser decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.displayName(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.username(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.followingCount(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public FreshUser redact(FreshUser value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
