// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/media.proto at 71:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / チャネル情報
 */
public final class Channel extends Message<Channel, Channel.Builder> {
  public static final ProtoAdapter<Channel> ADAPTER = new ProtoAdapter_Channel();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ID = "";

  public static final String DEFAULT_NAME = "";

  public static final Integer DEFAULT_ORDER = 0;

  /**
   * / チャネルID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String id;

  /**
   * / チャネル名
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  /**
   * / チャネル並び順
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer order;

  /**
   * / メディアステータス
   */
  @WireField(
      tag = 4,
      adapter = "tv.abema.protos.ChannelMediaStatus#ADAPTER"
  )
  public final ChannelMediaStatus mediaStatus;

  public Channel(String id, String name, Integer order, ChannelMediaStatus mediaStatus) {
    this(id, name, order, mediaStatus, ByteString.EMPTY);
  }

  public Channel(String id, String name, Integer order, ChannelMediaStatus mediaStatus, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.name = name;
    this.order = order;
    this.mediaStatus = mediaStatus;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.name = name;
    builder.order = order;
    builder.mediaStatus = mediaStatus;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Channel)) return false;
    Channel o = (Channel) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(name, o.name)
        && Internal.equals(order, o.order)
        && Internal.equals(mediaStatus, o.mediaStatus);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (order != null ? order.hashCode() : 0);
      result = result * 37 + (mediaStatus != null ? mediaStatus.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (name != null) builder.append(", name=").append(name);
    if (order != null) builder.append(", order=").append(order);
    if (mediaStatus != null) builder.append(", mediaStatus=").append(mediaStatus);
    return builder.replace(0, 2, "Channel{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Channel, Builder> {
    public String id;

    public String name;

    public Integer order;

    public ChannelMediaStatus mediaStatus;

    public Builder() {
    }

    /**
     * / チャネルID
     */
    public Builder id(String id) {
      this.id = id;
      return this;
    }

    /**
     * / チャネル名
     */
    public Builder name(String name) {
      this.name = name;
      return this;
    }

    /**
     * / チャネル並び順
     */
    public Builder order(Integer order) {
      this.order = order;
      return this;
    }

    /**
     * / メディアステータス
     */
    public Builder mediaStatus(ChannelMediaStatus mediaStatus) {
      this.mediaStatus = mediaStatus;
      return this;
    }

    @Override
    public Channel build() {
      return new Channel(id, name, order, mediaStatus, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Channel extends ProtoAdapter<Channel> {
    ProtoAdapter_Channel() {
      super(FieldEncoding.LENGTH_DELIMITED, Channel.class);
    }

    @Override
    public int encodedSize(Channel value) {
      return (value.id != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.id) : 0)
          + (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.name) : 0)
          + (value.order != null ? ProtoAdapter.INT32.encodedSizeWithTag(3, value.order) : 0)
          + (value.mediaStatus != null ? ChannelMediaStatus.ADAPTER.encodedSizeWithTag(4, value.mediaStatus) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Channel value) throws IOException {
      if (value.id != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.id);
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.name);
      if (value.order != null) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.order);
      if (value.mediaStatus != null) ChannelMediaStatus.ADAPTER.encodeWithTag(writer, 4, value.mediaStatus);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Channel decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.order(ProtoAdapter.INT32.decode(reader)); break;
          case 4: builder.mediaStatus(ChannelMediaStatus.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Channel redact(Channel value) {
      Builder builder = value.newBuilder();
      if (builder.mediaStatus != null) builder.mediaStatus = ChannelMediaStatus.ADAPTER.redact(builder.mediaStatus);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
