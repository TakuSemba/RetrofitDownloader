// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/media.proto at 161:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / マーク
 */
public final class SlotMark extends Message<SlotMark, SlotMark.Builder> {
  public static final ProtoAdapter<SlotMark> ADAPTER = new ProtoAdapter_SlotMark();

  private static final long serialVersionUID = 0L;

  public static final Boolean DEFAULT_LIVE = false;

  public static final Boolean DEFAULT_FIRST = false;

  public static final Boolean DEFAULT_LAST = false;

  public static final Boolean DEFAULT_BINGEWATCHING = false;

  public static final Boolean DEFAULT_DRM = false;

  public static final Boolean DEFAULT_NEWCOMER = false;

  public static final Boolean DEFAULT_RECOMMENDATION = false;

  /**
   * / LIVE
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean live;

  /**
   * / 初回
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean first;

  /**
   * / 最終回
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean last;

  /**
   * / 一挙放送
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean bingeWatching;

  /**
   * / DRM配信を含む
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean drm;

  /**
   * / 新放送
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean newcomer;

  /**
   * / 注目
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean recommendation;

  public SlotMark(Boolean live, Boolean first, Boolean last, Boolean bingeWatching, Boolean drm, Boolean newcomer, Boolean recommendation) {
    this(live, first, last, bingeWatching, drm, newcomer, recommendation, ByteString.EMPTY);
  }

  public SlotMark(Boolean live, Boolean first, Boolean last, Boolean bingeWatching, Boolean drm, Boolean newcomer, Boolean recommendation, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.live = live;
    this.first = first;
    this.last = last;
    this.bingeWatching = bingeWatching;
    this.drm = drm;
    this.newcomer = newcomer;
    this.recommendation = recommendation;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.live = live;
    builder.first = first;
    builder.last = last;
    builder.bingeWatching = bingeWatching;
    builder.drm = drm;
    builder.newcomer = newcomer;
    builder.recommendation = recommendation;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SlotMark)) return false;
    SlotMark o = (SlotMark) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(live, o.live)
        && Internal.equals(first, o.first)
        && Internal.equals(last, o.last)
        && Internal.equals(bingeWatching, o.bingeWatching)
        && Internal.equals(drm, o.drm)
        && Internal.equals(newcomer, o.newcomer)
        && Internal.equals(recommendation, o.recommendation);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (live != null ? live.hashCode() : 0);
      result = result * 37 + (first != null ? first.hashCode() : 0);
      result = result * 37 + (last != null ? last.hashCode() : 0);
      result = result * 37 + (bingeWatching != null ? bingeWatching.hashCode() : 0);
      result = result * 37 + (drm != null ? drm.hashCode() : 0);
      result = result * 37 + (newcomer != null ? newcomer.hashCode() : 0);
      result = result * 37 + (recommendation != null ? recommendation.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (live != null) builder.append(", live=").append(live);
    if (first != null) builder.append(", first=").append(first);
    if (last != null) builder.append(", last=").append(last);
    if (bingeWatching != null) builder.append(", bingeWatching=").append(bingeWatching);
    if (drm != null) builder.append(", drm=").append(drm);
    if (newcomer != null) builder.append(", newcomer=").append(newcomer);
    if (recommendation != null) builder.append(", recommendation=").append(recommendation);
    return builder.replace(0, 2, "SlotMark{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<SlotMark, Builder> {
    public Boolean live;

    public Boolean first;

    public Boolean last;

    public Boolean bingeWatching;

    public Boolean drm;

    public Boolean newcomer;

    public Boolean recommendation;

    public Builder() {
    }

    /**
     * / LIVE
     */
    public Builder live(Boolean live) {
      this.live = live;
      return this;
    }

    /**
     * / 初回
     */
    public Builder first(Boolean first) {
      this.first = first;
      return this;
    }

    /**
     * / 最終回
     */
    public Builder last(Boolean last) {
      this.last = last;
      return this;
    }

    /**
     * / 一挙放送
     */
    public Builder bingeWatching(Boolean bingeWatching) {
      this.bingeWatching = bingeWatching;
      return this;
    }

    /**
     * / DRM配信を含む
     */
    public Builder drm(Boolean drm) {
      this.drm = drm;
      return this;
    }

    /**
     * / 新放送
     */
    public Builder newcomer(Boolean newcomer) {
      this.newcomer = newcomer;
      return this;
    }

    /**
     * / 注目
     */
    public Builder recommendation(Boolean recommendation) {
      this.recommendation = recommendation;
      return this;
    }

    @Override
    public SlotMark build() {
      return new SlotMark(live, first, last, bingeWatching, drm, newcomer, recommendation, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SlotMark extends ProtoAdapter<SlotMark> {
    ProtoAdapter_SlotMark() {
      super(FieldEncoding.LENGTH_DELIMITED, SlotMark.class);
    }

    @Override
    public int encodedSize(SlotMark value) {
      return (value.live != null ? ProtoAdapter.BOOL.encodedSizeWithTag(1, value.live) : 0)
          + (value.first != null ? ProtoAdapter.BOOL.encodedSizeWithTag(2, value.first) : 0)
          + (value.last != null ? ProtoAdapter.BOOL.encodedSizeWithTag(3, value.last) : 0)
          + (value.bingeWatching != null ? ProtoAdapter.BOOL.encodedSizeWithTag(4, value.bingeWatching) : 0)
          + (value.drm != null ? ProtoAdapter.BOOL.encodedSizeWithTag(5, value.drm) : 0)
          + (value.newcomer != null ? ProtoAdapter.BOOL.encodedSizeWithTag(6, value.newcomer) : 0)
          + (value.recommendation != null ? ProtoAdapter.BOOL.encodedSizeWithTag(7, value.recommendation) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SlotMark value) throws IOException {
      if (value.live != null) ProtoAdapter.BOOL.encodeWithTag(writer, 1, value.live);
      if (value.first != null) ProtoAdapter.BOOL.encodeWithTag(writer, 2, value.first);
      if (value.last != null) ProtoAdapter.BOOL.encodeWithTag(writer, 3, value.last);
      if (value.bingeWatching != null) ProtoAdapter.BOOL.encodeWithTag(writer, 4, value.bingeWatching);
      if (value.drm != null) ProtoAdapter.BOOL.encodeWithTag(writer, 5, value.drm);
      if (value.newcomer != null) ProtoAdapter.BOOL.encodeWithTag(writer, 6, value.newcomer);
      if (value.recommendation != null) ProtoAdapter.BOOL.encodeWithTag(writer, 7, value.recommendation);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SlotMark decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.live(ProtoAdapter.BOOL.decode(reader)); break;
          case 2: builder.first(ProtoAdapter.BOOL.decode(reader)); break;
          case 3: builder.last(ProtoAdapter.BOOL.decode(reader)); break;
          case 4: builder.bingeWatching(ProtoAdapter.BOOL.decode(reader)); break;
          case 5: builder.drm(ProtoAdapter.BOOL.decode(reader)); break;
          case 6: builder.newcomer(ProtoAdapter.BOOL.decode(reader)); break;
          case 7: builder.recommendation(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SlotMark redact(SlotMark value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
