// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/channel.proto at 22:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class GetChannelsResponse extends Message<GetChannelsResponse, GetChannelsResponse.Builder> {
  public static final ProtoAdapter<GetChannelsResponse> ADAPTER = new ProtoAdapter_GetChannelsResponse();

  private static final long serialVersionUID = 0L;

  /**
   * / 現在公開可能なチャンネル一覧
   */
  @WireField(
      tag = 1,
      adapter = "tv.abema.protos.BroadcastChannel#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<BroadcastChannel> channels;

  public GetChannelsResponse(List<BroadcastChannel> channels) {
    this(channels, ByteString.EMPTY);
  }

  public GetChannelsResponse(List<BroadcastChannel> channels, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.channels = Internal.immutableCopyOf("channels", channels);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.channels = Internal.copyOf("channels", channels);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetChannelsResponse)) return false;
    GetChannelsResponse o = (GetChannelsResponse) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(channels, o.channels);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (channels != null ? channels.hashCode() : 1);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (channels != null) builder.append(", channels=").append(channels);
    return builder.replace(0, 2, "GetChannelsResponse{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetChannelsResponse, Builder> {
    public List<BroadcastChannel> channels;

    public Builder() {
      channels = Internal.newMutableList();
    }

    /**
     * / 現在公開可能なチャンネル一覧
     */
    public Builder channels(List<BroadcastChannel> channels) {
      Internal.checkElementsNotNull(channels);
      this.channels = channels;
      return this;
    }

    @Override
    public GetChannelsResponse build() {
      return new GetChannelsResponse(channels, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetChannelsResponse extends ProtoAdapter<GetChannelsResponse> {
    ProtoAdapter_GetChannelsResponse() {
      super(FieldEncoding.LENGTH_DELIMITED, GetChannelsResponse.class);
    }

    @Override
    public int encodedSize(GetChannelsResponse value) {
      return BroadcastChannel.ADAPTER.asRepeated().encodedSizeWithTag(1, value.channels)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetChannelsResponse value) throws IOException {
      if (value.channels != null) BroadcastChannel.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.channels);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetChannelsResponse decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.channels.add(BroadcastChannel.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetChannelsResponse redact(GetChannelsResponse value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.channels, BroadcastChannel.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
