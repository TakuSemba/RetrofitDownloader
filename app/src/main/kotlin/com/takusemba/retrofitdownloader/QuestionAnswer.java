// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/faq.proto at 22:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / QuestionAnswer question and answer
 */
public final class QuestionAnswer extends Message<QuestionAnswer, QuestionAnswer.Builder> {
  public static final ProtoAdapter<QuestionAnswer> ADAPTER = new ProtoAdapter_QuestionAnswer();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_QUESTION = "";

  public static final String DEFAULT_ANSWER = "";

  /**
   * / question text
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String question;

  /**
   * / answer text
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String answer;

  public QuestionAnswer(String question, String answer) {
    this(question, answer, ByteString.EMPTY);
  }

  public QuestionAnswer(String question, String answer, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.question = question;
    this.answer = answer;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.question = question;
    builder.answer = answer;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof QuestionAnswer)) return false;
    QuestionAnswer o = (QuestionAnswer) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(question, o.question)
        && Internal.equals(answer, o.answer);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (question != null ? question.hashCode() : 0);
      result = result * 37 + (answer != null ? answer.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (question != null) builder.append(", question=").append(question);
    if (answer != null) builder.append(", answer=").append(answer);
    return builder.replace(0, 2, "QuestionAnswer{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<QuestionAnswer, Builder> {
    public String question;

    public String answer;

    public Builder() {
    }

    /**
     * / question text
     */
    public Builder question(String question) {
      this.question = question;
      return this;
    }

    /**
     * / answer text
     */
    public Builder answer(String answer) {
      this.answer = answer;
      return this;
    }

    @Override
    public QuestionAnswer build() {
      return new QuestionAnswer(question, answer, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_QuestionAnswer extends ProtoAdapter<QuestionAnswer> {
    ProtoAdapter_QuestionAnswer() {
      super(FieldEncoding.LENGTH_DELIMITED, QuestionAnswer.class);
    }

    @Override
    public int encodedSize(QuestionAnswer value) {
      return (value.question != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.question) : 0)
          + (value.answer != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.answer) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, QuestionAnswer value) throws IOException {
      if (value.question != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.question);
      if (value.answer != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.answer);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public QuestionAnswer decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.question(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.answer(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public QuestionAnswer redact(QuestionAnswer value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
