// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/media_streaming.proto at 17:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / 視聴中ステータス更新 response
 */
public final class GetVideoStreamingResponse extends Message<GetVideoStreamingResponse, GetVideoStreamingResponse.Builder> {
  public static final ProtoAdapter<GetVideoStreamingResponse> ADAPTER = new ProtoAdapter_GetVideoStreamingResponse();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_INTERVAL = 0;

  /**
   * / 視聴中ステータスの更新頻度(秒)
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer interval;

  /**
   * / 同時視聴数
   */
  @WireField(
      tag = 2,
      adapter = "tv.abema.protos.VideoStreamingCount#ADAPTER"
  )
  public final VideoStreamingCount count;

  public GetVideoStreamingResponse(Integer interval, VideoStreamingCount count) {
    this(interval, count, ByteString.EMPTY);
  }

  public GetVideoStreamingResponse(Integer interval, VideoStreamingCount count, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.interval = interval;
    this.count = count;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.interval = interval;
    builder.count = count;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetVideoStreamingResponse)) return false;
    GetVideoStreamingResponse o = (GetVideoStreamingResponse) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(interval, o.interval)
        && Internal.equals(count, o.count);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (interval != null ? interval.hashCode() : 0);
      result = result * 37 + (count != null ? count.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (interval != null) builder.append(", interval=").append(interval);
    if (count != null) builder.append(", count=").append(count);
    return builder.replace(0, 2, "GetVideoStreamingResponse{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetVideoStreamingResponse, Builder> {
    public Integer interval;

    public VideoStreamingCount count;

    public Builder() {
    }

    /**
     * / 視聴中ステータスの更新頻度(秒)
     */
    public Builder interval(Integer interval) {
      this.interval = interval;
      return this;
    }

    /**
     * / 同時視聴数
     */
    public Builder count(VideoStreamingCount count) {
      this.count = count;
      return this;
    }

    @Override
    public GetVideoStreamingResponse build() {
      return new GetVideoStreamingResponse(interval, count, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetVideoStreamingResponse extends ProtoAdapter<GetVideoStreamingResponse> {
    ProtoAdapter_GetVideoStreamingResponse() {
      super(FieldEncoding.LENGTH_DELIMITED, GetVideoStreamingResponse.class);
    }

    @Override
    public int encodedSize(GetVideoStreamingResponse value) {
      return (value.interval != null ? ProtoAdapter.INT32.encodedSizeWithTag(1, value.interval) : 0)
          + (value.count != null ? VideoStreamingCount.ADAPTER.encodedSizeWithTag(2, value.count) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetVideoStreamingResponse value) throws IOException {
      if (value.interval != null) ProtoAdapter.INT32.encodeWithTag(writer, 1, value.interval);
      if (value.count != null) VideoStreamingCount.ADAPTER.encodeWithTag(writer, 2, value.count);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetVideoStreamingResponse decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.interval(ProtoAdapter.INT32.decode(reader)); break;
          case 2: builder.count(VideoStreamingCount.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetVideoStreamingResponse redact(GetVideoStreamingResponse value) {
      Builder builder = value.newBuilder();
      if (builder.count != null) builder.count = VideoStreamingCount.ADAPTER.redact(builder.count);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
