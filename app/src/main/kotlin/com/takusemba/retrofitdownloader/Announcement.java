// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/announcement.proto at 11:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / Represents a announcement
 */
public final class Announcement extends Message<Announcement, Announcement.Builder> {
  public static final ProtoAdapter<Announcement> ADAPTER = new ProtoAdapter_Announcement();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_TITLE = "";

  public static final String DEFAULT_URL = "";

  public static final Long DEFAULT_PUBLISHEDAT = 0L;

  public static final Boolean DEFAULT_UNREAD = false;

  /**
   * / Announcement title
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String title;

  /**
   * / Announcement url
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String url;

  /**
   * / Published at (unix time)
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long publishedAt;

  /**
   * / Unread flag
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean unread;

  public Announcement(String title, String url, Long publishedAt, Boolean unread) {
    this(title, url, publishedAt, unread, ByteString.EMPTY);
  }

  public Announcement(String title, String url, Long publishedAt, Boolean unread, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.title = title;
    this.url = url;
    this.publishedAt = publishedAt;
    this.unread = unread;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.title = title;
    builder.url = url;
    builder.publishedAt = publishedAt;
    builder.unread = unread;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Announcement)) return false;
    Announcement o = (Announcement) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(title, o.title)
        && Internal.equals(url, o.url)
        && Internal.equals(publishedAt, o.publishedAt)
        && Internal.equals(unread, o.unread);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (title != null ? title.hashCode() : 0);
      result = result * 37 + (url != null ? url.hashCode() : 0);
      result = result * 37 + (publishedAt != null ? publishedAt.hashCode() : 0);
      result = result * 37 + (unread != null ? unread.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (title != null) builder.append(", title=").append(title);
    if (url != null) builder.append(", url=").append(url);
    if (publishedAt != null) builder.append(", publishedAt=").append(publishedAt);
    if (unread != null) builder.append(", unread=").append(unread);
    return builder.replace(0, 2, "Announcement{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Announcement, Builder> {
    public String title;

    public String url;

    public Long publishedAt;

    public Boolean unread;

    public Builder() {
    }

    /**
     * / Announcement title
     */
    public Builder title(String title) {
      this.title = title;
      return this;
    }

    /**
     * / Announcement url
     */
    public Builder url(String url) {
      this.url = url;
      return this;
    }

    /**
     * / Published at (unix time)
     */
    public Builder publishedAt(Long publishedAt) {
      this.publishedAt = publishedAt;
      return this;
    }

    /**
     * / Unread flag
     */
    public Builder unread(Boolean unread) {
      this.unread = unread;
      return this;
    }

    @Override
    public Announcement build() {
      return new Announcement(title, url, publishedAt, unread, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Announcement extends ProtoAdapter<Announcement> {
    ProtoAdapter_Announcement() {
      super(FieldEncoding.LENGTH_DELIMITED, Announcement.class);
    }

    @Override
    public int encodedSize(Announcement value) {
      return (value.title != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.title) : 0)
          + (value.url != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.url) : 0)
          + (value.publishedAt != null ? ProtoAdapter.INT64.encodedSizeWithTag(3, value.publishedAt) : 0)
          + (value.unread != null ? ProtoAdapter.BOOL.encodedSizeWithTag(4, value.unread) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Announcement value) throws IOException {
      if (value.title != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.title);
      if (value.url != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.url);
      if (value.publishedAt != null) ProtoAdapter.INT64.encodeWithTag(writer, 3, value.publishedAt);
      if (value.unread != null) ProtoAdapter.BOOL.encodeWithTag(writer, 4, value.unread);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Announcement decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.title(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.url(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.publishedAt(ProtoAdapter.INT64.decode(reader)); break;
          case 4: builder.unread(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Announcement redact(Announcement value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
