// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/twitter.proto at 11:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / Represents a twitter user
 */
public final class TwitterUser extends Message<TwitterUser, TwitterUser.Builder> {
  public static final ProtoAdapter<TwitterUser> ADAPTER = new ProtoAdapter_TwitterUser();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ID = "";

  public static final String DEFAULT_NAME = "";

  public static final String DEFAULT_SCREENNAME = "";

  public static final String DEFAULT_PROFILEIMAGEURL = "";

  /**
   * / ID of Twitter account
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String id;

  /**
   * / Name of Twitter account
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  /**
   * / Screen name of Twitter account
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String screenName;

  /**
   * / Profile image url of Twitter account
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String profileImageUrl;

  public TwitterUser(String id, String name, String screenName, String profileImageUrl) {
    this(id, name, screenName, profileImageUrl, ByteString.EMPTY);
  }

  public TwitterUser(String id, String name, String screenName, String profileImageUrl, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.name = name;
    this.screenName = screenName;
    this.profileImageUrl = profileImageUrl;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.name = name;
    builder.screenName = screenName;
    builder.profileImageUrl = profileImageUrl;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TwitterUser)) return false;
    TwitterUser o = (TwitterUser) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(name, o.name)
        && Internal.equals(screenName, o.screenName)
        && Internal.equals(profileImageUrl, o.profileImageUrl);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (screenName != null ? screenName.hashCode() : 0);
      result = result * 37 + (profileImageUrl != null ? profileImageUrl.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (name != null) builder.append(", name=").append(name);
    if (screenName != null) builder.append(", screenName=").append(screenName);
    if (profileImageUrl != null) builder.append(", profileImageUrl=").append(profileImageUrl);
    return builder.replace(0, 2, "TwitterUser{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<TwitterUser, Builder> {
    public String id;

    public String name;

    public String screenName;

    public String profileImageUrl;

    public Builder() {
    }

    /**
     * / ID of Twitter account
     */
    public Builder id(String id) {
      this.id = id;
      return this;
    }

    /**
     * / Name of Twitter account
     */
    public Builder name(String name) {
      this.name = name;
      return this;
    }

    /**
     * / Screen name of Twitter account
     */
    public Builder screenName(String screenName) {
      this.screenName = screenName;
      return this;
    }

    /**
     * / Profile image url of Twitter account
     */
    public Builder profileImageUrl(String profileImageUrl) {
      this.profileImageUrl = profileImageUrl;
      return this;
    }

    @Override
    public TwitterUser build() {
      return new TwitterUser(id, name, screenName, profileImageUrl, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_TwitterUser extends ProtoAdapter<TwitterUser> {
    ProtoAdapter_TwitterUser() {
      super(FieldEncoding.LENGTH_DELIMITED, TwitterUser.class);
    }

    @Override
    public int encodedSize(TwitterUser value) {
      return (value.id != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.id) : 0)
          + (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.name) : 0)
          + (value.screenName != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.screenName) : 0)
          + (value.profileImageUrl != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.profileImageUrl) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, TwitterUser value) throws IOException {
      if (value.id != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.id);
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.name);
      if (value.screenName != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.screenName);
      if (value.profileImageUrl != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.profileImageUrl);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public TwitterUser decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.screenName(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.profileImageUrl(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public TwitterUser redact(TwitterUser value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
