// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/subscription.proto at 12:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / Apple月額課金情報登録 request
 */
public final class RegisterAppleSubscriptionRequest extends Message<RegisterAppleSubscriptionRequest, RegisterAppleSubscriptionRequest.Builder> {
  public static final ProtoAdapter<RegisterAppleSubscriptionRequest> ADAPTER = new ProtoAdapter_RegisterAppleSubscriptionRequest();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_RECEIPT = "";

  /**
   * / レシート
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String receipt;

  public RegisterAppleSubscriptionRequest(String receipt) {
    this(receipt, ByteString.EMPTY);
  }

  public RegisterAppleSubscriptionRequest(String receipt, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.receipt = receipt;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.receipt = receipt;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RegisterAppleSubscriptionRequest)) return false;
    RegisterAppleSubscriptionRequest o = (RegisterAppleSubscriptionRequest) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(receipt, o.receipt);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (receipt != null ? receipt.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (receipt != null) builder.append(", receipt=").append(receipt);
    return builder.replace(0, 2, "RegisterAppleSubscriptionRequest{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<RegisterAppleSubscriptionRequest, Builder> {
    public String receipt;

    public Builder() {
    }

    /**
     * / レシート
     */
    public Builder receipt(String receipt) {
      this.receipt = receipt;
      return this;
    }

    @Override
    public RegisterAppleSubscriptionRequest build() {
      return new RegisterAppleSubscriptionRequest(receipt, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_RegisterAppleSubscriptionRequest extends ProtoAdapter<RegisterAppleSubscriptionRequest> {
    ProtoAdapter_RegisterAppleSubscriptionRequest() {
      super(FieldEncoding.LENGTH_DELIMITED, RegisterAppleSubscriptionRequest.class);
    }

    @Override
    public int encodedSize(RegisterAppleSubscriptionRequest value) {
      return (value.receipt != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.receipt) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, RegisterAppleSubscriptionRequest value) throws IOException {
      if (value.receipt != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.receipt);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public RegisterAppleSubscriptionRequest decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.receipt(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public RegisterAppleSubscriptionRequest redact(RegisterAppleSubscriptionRequest value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
