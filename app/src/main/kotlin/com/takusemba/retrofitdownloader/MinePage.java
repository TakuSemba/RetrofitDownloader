// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/track.proto at 38:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class MinePage extends Message<MinePage, MinePage.Builder> {
  public static final ProtoAdapter<MinePage> ADAPTER = new ProtoAdapter_MinePage();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_PAGEID = "";

  public static final String DEFAULT_URL = "";

  public static final String DEFAULT_COOKIE = "";

  public static final String DEFAULT_INFLOWID = "";

  public static final String DEFAULT_REFERRER = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String pageId;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String url;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String cookie;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String inflowId;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String referrer;

  public MinePage(String pageId, String url, String cookie, String inflowId, String referrer) {
    this(pageId, url, cookie, inflowId, referrer, ByteString.EMPTY);
  }

  public MinePage(String pageId, String url, String cookie, String inflowId, String referrer, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.pageId = pageId;
    this.url = url;
    this.cookie = cookie;
    this.inflowId = inflowId;
    this.referrer = referrer;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.pageId = pageId;
    builder.url = url;
    builder.cookie = cookie;
    builder.inflowId = inflowId;
    builder.referrer = referrer;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof MinePage)) return false;
    MinePage o = (MinePage) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(pageId, o.pageId)
        && Internal.equals(url, o.url)
        && Internal.equals(cookie, o.cookie)
        && Internal.equals(inflowId, o.inflowId)
        && Internal.equals(referrer, o.referrer);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (pageId != null ? pageId.hashCode() : 0);
      result = result * 37 + (url != null ? url.hashCode() : 0);
      result = result * 37 + (cookie != null ? cookie.hashCode() : 0);
      result = result * 37 + (inflowId != null ? inflowId.hashCode() : 0);
      result = result * 37 + (referrer != null ? referrer.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (pageId != null) builder.append(", pageId=").append(pageId);
    if (url != null) builder.append(", url=").append(url);
    if (cookie != null) builder.append(", cookie=").append(cookie);
    if (inflowId != null) builder.append(", inflowId=").append(inflowId);
    if (referrer != null) builder.append(", referrer=").append(referrer);
    return builder.replace(0, 2, "MinePage{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<MinePage, Builder> {
    public String pageId;

    public String url;

    public String cookie;

    public String inflowId;

    public String referrer;

    public Builder() {
    }

    public Builder pageId(String pageId) {
      this.pageId = pageId;
      return this;
    }

    public Builder url(String url) {
      this.url = url;
      return this;
    }

    public Builder cookie(String cookie) {
      this.cookie = cookie;
      return this;
    }

    public Builder inflowId(String inflowId) {
      this.inflowId = inflowId;
      return this;
    }

    public Builder referrer(String referrer) {
      this.referrer = referrer;
      return this;
    }

    @Override
    public MinePage build() {
      return new MinePage(pageId, url, cookie, inflowId, referrer, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_MinePage extends ProtoAdapter<MinePage> {
    ProtoAdapter_MinePage() {
      super(FieldEncoding.LENGTH_DELIMITED, MinePage.class);
    }

    @Override
    public int encodedSize(MinePage value) {
      return (value.pageId != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.pageId) : 0)
          + (value.url != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.url) : 0)
          + (value.cookie != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.cookie) : 0)
          + (value.inflowId != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.inflowId) : 0)
          + (value.referrer != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.referrer) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, MinePage value) throws IOException {
      if (value.pageId != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.pageId);
      if (value.url != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.url);
      if (value.cookie != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.cookie);
      if (value.inflowId != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.inflowId);
      if (value.referrer != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.referrer);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public MinePage decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.pageId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.url(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.cookie(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.inflowId(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.referrer(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public MinePage redact(MinePage value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
