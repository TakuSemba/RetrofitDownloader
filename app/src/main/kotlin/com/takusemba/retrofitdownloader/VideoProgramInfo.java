// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/video.proto at 35:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / ビデオ番組情報
 */
public final class VideoProgramInfo extends Message<VideoProgramInfo, VideoProgramInfo.Builder> {
  public static final ProtoAdapter<VideoProgramInfo> ADAPTER = new ProtoAdapter_VideoProgramInfo();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_DURATION = 0;

  /**
   * / 本編尺
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer duration;

  public VideoProgramInfo(Integer duration) {
    this(duration, ByteString.EMPTY);
  }

  public VideoProgramInfo(Integer duration, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.duration = duration;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.duration = duration;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof VideoProgramInfo)) return false;
    VideoProgramInfo o = (VideoProgramInfo) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(duration, o.duration);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (duration != null ? duration.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (duration != null) builder.append(", duration=").append(duration);
    return builder.replace(0, 2, "VideoProgramInfo{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<VideoProgramInfo, Builder> {
    public Integer duration;

    public Builder() {
    }

    /**
     * / 本編尺
     */
    public Builder duration(Integer duration) {
      this.duration = duration;
      return this;
    }

    @Override
    public VideoProgramInfo build() {
      return new VideoProgramInfo(duration, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_VideoProgramInfo extends ProtoAdapter<VideoProgramInfo> {
    ProtoAdapter_VideoProgramInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, VideoProgramInfo.class);
    }

    @Override
    public int encodedSize(VideoProgramInfo value) {
      return (value.duration != null ? ProtoAdapter.INT32.encodedSizeWithTag(1, value.duration) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, VideoProgramInfo value) throws IOException {
      if (value.duration != null) ProtoAdapter.INT32.encodeWithTag(writer, 1, value.duration);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public VideoProgramInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.duration(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public VideoProgramInfo redact(VideoProgramInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
