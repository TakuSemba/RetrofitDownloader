// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/media.proto at 254:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * Slot Reservation
 */
public final class SlotReservation extends Message<SlotReservation, SlotReservation.Builder> {
  public static final ProtoAdapter<SlotReservation> ADAPTER = new ProtoAdapter_SlotReservation();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_SLOTID = "";

  public static final Long DEFAULT_RESERVEDAT = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String slotId;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long reservedAt;

  public SlotReservation(String slotId, Long reservedAt) {
    this(slotId, reservedAt, ByteString.EMPTY);
  }

  public SlotReservation(String slotId, Long reservedAt, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.slotId = slotId;
    this.reservedAt = reservedAt;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.slotId = slotId;
    builder.reservedAt = reservedAt;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SlotReservation)) return false;
    SlotReservation o = (SlotReservation) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(slotId, o.slotId)
        && Internal.equals(reservedAt, o.reservedAt);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (slotId != null ? slotId.hashCode() : 0);
      result = result * 37 + (reservedAt != null ? reservedAt.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (slotId != null) builder.append(", slotId=").append(slotId);
    if (reservedAt != null) builder.append(", reservedAt=").append(reservedAt);
    return builder.replace(0, 2, "SlotReservation{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<SlotReservation, Builder> {
    public String slotId;

    public Long reservedAt;

    public Builder() {
    }

    public Builder slotId(String slotId) {
      this.slotId = slotId;
      return this;
    }

    public Builder reservedAt(Long reservedAt) {
      this.reservedAt = reservedAt;
      return this;
    }

    @Override
    public SlotReservation build() {
      return new SlotReservation(slotId, reservedAt, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SlotReservation extends ProtoAdapter<SlotReservation> {
    ProtoAdapter_SlotReservation() {
      super(FieldEncoding.LENGTH_DELIMITED, SlotReservation.class);
    }

    @Override
    public int encodedSize(SlotReservation value) {
      return (value.slotId != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.slotId) : 0)
          + (value.reservedAt != null ? ProtoAdapter.INT64.encodedSizeWithTag(2, value.reservedAt) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SlotReservation value) throws IOException {
      if (value.slotId != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.slotId);
      if (value.reservedAt != null) ProtoAdapter.INT64.encodeWithTag(writer, 2, value.reservedAt);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SlotReservation decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.slotId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.reservedAt(ProtoAdapter.INT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SlotReservation redact(SlotReservation value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
