// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/device.proto at 10:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ValidateDeviceRequest extends Message<ValidateDeviceRequest, ValidateDeviceRequest.Builder> {
  public static final ProtoAdapter<ValidateDeviceRequest> ADAPTER = new ProtoAdapter_ValidateDeviceRequest();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_VALUE = "";

  public static final String DEFAULT_VERSION = "";

  /**
   * / The hashed value of deviceId.
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String value;

  /**
   * / The application version.
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String version;

  public ValidateDeviceRequest(String value, String version) {
    this(value, version, ByteString.EMPTY);
  }

  public ValidateDeviceRequest(String value, String version, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.value = value;
    this.version = version;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.value = value;
    builder.version = version;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ValidateDeviceRequest)) return false;
    ValidateDeviceRequest o = (ValidateDeviceRequest) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(value, o.value)
        && Internal.equals(version, o.version);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (value != null ? value.hashCode() : 0);
      result = result * 37 + (version != null ? version.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (value != null) builder.append(", value=").append(value);
    if (version != null) builder.append(", version=").append(version);
    return builder.replace(0, 2, "ValidateDeviceRequest{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<ValidateDeviceRequest, Builder> {
    public String value;

    public String version;

    public Builder() {
    }

    /**
     * / The hashed value of deviceId.
     */
    public Builder value(String value) {
      this.value = value;
      return this;
    }

    /**
     * / The application version.
     */
    public Builder version(String version) {
      this.version = version;
      return this;
    }

    @Override
    public ValidateDeviceRequest build() {
      return new ValidateDeviceRequest(value, version, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ValidateDeviceRequest extends ProtoAdapter<ValidateDeviceRequest> {
    ProtoAdapter_ValidateDeviceRequest() {
      super(FieldEncoding.LENGTH_DELIMITED, ValidateDeviceRequest.class);
    }

    @Override
    public int encodedSize(ValidateDeviceRequest value) {
      return (value.value != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.value) : 0)
          + (value.version != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.version) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ValidateDeviceRequest value) throws IOException {
      if (value.value != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.value);
      if (value.version != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.version);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ValidateDeviceRequest decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.value(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.version(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ValidateDeviceRequest redact(ValidateDeviceRequest value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
