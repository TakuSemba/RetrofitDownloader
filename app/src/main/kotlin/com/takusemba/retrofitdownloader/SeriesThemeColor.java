// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/media.proto at 233:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / テーマカラー
 */
public final class SeriesThemeColor extends Message<SeriesThemeColor, SeriesThemeColor.Builder> {
  public static final ProtoAdapter<SeriesThemeColor> ADAPTER = new ProtoAdapter_SeriesThemeColor();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_PRIMARY = "";

  public static final String DEFAULT_SECONDARY = "";

  public static final String DEFAULT_DETAIL = "";

  public static final String DEFAULT_BACKGROUND = "";

  /**
   * / プライマリ
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String primary;

  /**
   * / セカンダリ
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String secondary;

  /**
   * / ディティール
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String detail;

  /**
   * / 背景
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String background;

  public SeriesThemeColor(String primary, String secondary, String detail, String background) {
    this(primary, secondary, detail, background, ByteString.EMPTY);
  }

  public SeriesThemeColor(String primary, String secondary, String detail, String background, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.primary = primary;
    this.secondary = secondary;
    this.detail = detail;
    this.background = background;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.primary = primary;
    builder.secondary = secondary;
    builder.detail = detail;
    builder.background = background;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SeriesThemeColor)) return false;
    SeriesThemeColor o = (SeriesThemeColor) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(primary, o.primary)
        && Internal.equals(secondary, o.secondary)
        && Internal.equals(detail, o.detail)
        && Internal.equals(background, o.background);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (primary != null ? primary.hashCode() : 0);
      result = result * 37 + (secondary != null ? secondary.hashCode() : 0);
      result = result * 37 + (detail != null ? detail.hashCode() : 0);
      result = result * 37 + (background != null ? background.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (primary != null) builder.append(", primary=").append(primary);
    if (secondary != null) builder.append(", secondary=").append(secondary);
    if (detail != null) builder.append(", detail=").append(detail);
    if (background != null) builder.append(", background=").append(background);
    return builder.replace(0, 2, "SeriesThemeColor{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<SeriesThemeColor, Builder> {
    public String primary;

    public String secondary;

    public String detail;

    public String background;

    public Builder() {
    }

    /**
     * / プライマリ
     */
    public Builder primary(String primary) {
      this.primary = primary;
      return this;
    }

    /**
     * / セカンダリ
     */
    public Builder secondary(String secondary) {
      this.secondary = secondary;
      return this;
    }

    /**
     * / ディティール
     */
    public Builder detail(String detail) {
      this.detail = detail;
      return this;
    }

    /**
     * / 背景
     */
    public Builder background(String background) {
      this.background = background;
      return this;
    }

    @Override
    public SeriesThemeColor build() {
      return new SeriesThemeColor(primary, secondary, detail, background, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SeriesThemeColor extends ProtoAdapter<SeriesThemeColor> {
    ProtoAdapter_SeriesThemeColor() {
      super(FieldEncoding.LENGTH_DELIMITED, SeriesThemeColor.class);
    }

    @Override
    public int encodedSize(SeriesThemeColor value) {
      return (value.primary != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.primary) : 0)
          + (value.secondary != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.secondary) : 0)
          + (value.detail != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.detail) : 0)
          + (value.background != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.background) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SeriesThemeColor value) throws IOException {
      if (value.primary != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.primary);
      if (value.secondary != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.secondary);
      if (value.detail != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.detail);
      if (value.background != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.background);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SeriesThemeColor decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.primary(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.secondary(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.detail(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.background(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SeriesThemeColor redact(SeriesThemeColor value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
