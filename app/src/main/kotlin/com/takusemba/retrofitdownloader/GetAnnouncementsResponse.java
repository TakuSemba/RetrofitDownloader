// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/announcement.proto at 19:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * / Represents a response of get announcement
 */
public final class GetAnnouncementsResponse extends Message<GetAnnouncementsResponse, GetAnnouncementsResponse.Builder> {
  public static final ProtoAdapter<GetAnnouncementsResponse> ADAPTER = new ProtoAdapter_GetAnnouncementsResponse();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_UNREAD = 0;

  /**
   * / Announcements
   */
  @WireField(
      tag = 1,
      adapter = "tv.abema.protos.Announcement#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Announcement> announcements;

  /**
   * / Unread flag or count
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer unread;

  public GetAnnouncementsResponse(List<Announcement> announcements, Integer unread) {
    this(announcements, unread, ByteString.EMPTY);
  }

  public GetAnnouncementsResponse(List<Announcement> announcements, Integer unread, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.announcements = Internal.immutableCopyOf("announcements", announcements);
    this.unread = unread;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.announcements = Internal.copyOf("announcements", announcements);
    builder.unread = unread;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetAnnouncementsResponse)) return false;
    GetAnnouncementsResponse o = (GetAnnouncementsResponse) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(announcements, o.announcements)
        && Internal.equals(unread, o.unread);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (announcements != null ? announcements.hashCode() : 1);
      result = result * 37 + (unread != null ? unread.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (announcements != null) builder.append(", announcements=").append(announcements);
    if (unread != null) builder.append(", unread=").append(unread);
    return builder.replace(0, 2, "GetAnnouncementsResponse{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetAnnouncementsResponse, Builder> {
    public List<Announcement> announcements;

    public Integer unread;

    public Builder() {
      announcements = Internal.newMutableList();
    }

    /**
     * / Announcements
     */
    public Builder announcements(List<Announcement> announcements) {
      Internal.checkElementsNotNull(announcements);
      this.announcements = announcements;
      return this;
    }

    /**
     * / Unread flag or count
     */
    public Builder unread(Integer unread) {
      this.unread = unread;
      return this;
    }

    @Override
    public GetAnnouncementsResponse build() {
      return new GetAnnouncementsResponse(announcements, unread, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetAnnouncementsResponse extends ProtoAdapter<GetAnnouncementsResponse> {
    ProtoAdapter_GetAnnouncementsResponse() {
      super(FieldEncoding.LENGTH_DELIMITED, GetAnnouncementsResponse.class);
    }

    @Override
    public int encodedSize(GetAnnouncementsResponse value) {
      return Announcement.ADAPTER.asRepeated().encodedSizeWithTag(1, value.announcements)
          + (value.unread != null ? ProtoAdapter.INT32.encodedSizeWithTag(2, value.unread) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetAnnouncementsResponse value) throws IOException {
      if (value.announcements != null) Announcement.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.announcements);
      if (value.unread != null) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.unread);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetAnnouncementsResponse decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.announcements.add(Announcement.ADAPTER.decode(reader)); break;
          case 2: builder.unread(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetAnnouncementsResponse redact(GetAnnouncementsResponse value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.announcements, Announcement.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
