// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/track.proto at 96:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Float;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class MineContents extends Message<MineContents, MineContents.Builder> {
  public static final ProtoAdapter<MineContents> ADAPTER = new ProtoAdapter_MineContents();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_CHANNELID = "";

  public static final String DEFAULT_CHANNELNAME = "";

  public static final Integer DEFAULT_CHANNELORDER = 0;

  public static final String DEFAULT_SLOTID = "";

  public static final String DEFAULT_SLOTTITLE = "";

  public static final Long DEFAULT_SLOTTABLESTARTAT = 0L;

  public static final String DEFAULT_PROGRAMID = "";

  public static final Long DEFAULT_WATCHSTARTAT = 0L;

  public static final Long DEFAULT_WATCHENDAT = 0L;

  public static final Long DEFAULT_ELAPSEDTIME = 0L;

  public static final Long DEFAULT_STARTPOSITION = 0L;

  public static final Long DEFAULT_ENDPOSITION = 0L;

  public static final Boolean DEFAULT_RESERVEWATCHING = false;

  public static final Boolean DEFAULT_TIMESHIFTWATCHING = false;

  public static final Boolean DEFAULT_OFFLINEWATCHING = false;

  public static final MineFromType DEFAULT_FROMTYPE = MineFromType.from_go_on_with;

  public static final MinePlayerType DEFAULT_PLAYERTYPE = MinePlayerType.player_feed;

  public static final MineNetworkType DEFAULT_NETWORKTYPE = MineNetworkType.network_wifi;

  public static final Boolean DEFAULT_COMPLETE = false;

  public static final Boolean DEFAULT_ALLOWNOTIFICATIONS = false;

  public static final MineAdSpotType DEFAULT_ADSPOTTYPE = MineAdSpotType.ad_spot_ad;

  public static final Integer DEFAULT_ADSPOTSEQUENCE = 0;

  public static final Long DEFAULT_ADSPOTDURATION = 0L;

  public static final String DEFAULT_PUSHID = "";

  public static final String DEFAULT_PUSHTEXT = "";

  public static final String DEFAULT_ALGORITHM = "";

  public static final Long DEFAULT_CURRENTPOSITION = 0L;

  public static final MineSnsType DEFAULT_SNSTYPE = MineSnsType.sns_twitter;

  public static final MineShareType DEFAULT_SHARETYPE = MineShareType.share_feed;

  public static final String DEFAULT_SHARECOMMENT = "";

  public static final String DEFAULT_FILLERID = "";

  public static final Boolean DEFAULT_DURINGONAIR = false;

  public static final MineReserveType DEFAULT_RESERVETYPE = MineReserveType.reserve_timetable;

  public static final MineMethodType DEFAULT_METHODTYPE = MineMethodType.method_other;

  public static final String DEFAULT_COMMENT = "";

  public static final MineGenderType DEFAULT_GENDERTYPE = MineGenderType.gender_unknown;

  public static final Integer DEFAULT_BIRTHYEAR = 0;

  public static final MinePrefectureType DEFAULT_PREFECTURE = MinePrefectureType.prefecture_other;

  public static final MineBookmarkType DEFAULT_BOOKMARKTYPE = MineBookmarkType.bookmark_other;

  public static final String DEFAULT_SLOTGROUPID = "";

  public static final String DEFAULT_PROMOTEDSLOTID = "";

  public static final String DEFAULT_GACID = "";

  public static final MineFillerType DEFAULT_FILLERTYPE = MineFillerType.filler_normal;

  public static final String DEFAULT_QUESTIONID = "";

  public static final Integer DEFAULT_CHOICENUMBER = 0;

  public static final Boolean DEFAULT_ALLOWSPECIFICNOTIFICATIONS = false;

  public static final Boolean DEFAULT_PORTRAIT = false;

  public static final String DEFAULT_CUEPOINTID = "";

  public static final String DEFAULT_CREATIVEID = "";

  public static final Boolean DEFAULT_FREEPROGRAM = false;

  public static final String DEFAULT_ANDROIDID = "";

  public static final String DEFAULT_BUILDSERIAL = "";

  public static final String DEFAULT_XUNIQ = "";

  public static final Float DEFAULT_SPEEDRATE = 0.0f;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String channelId;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String channelName;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer channelOrder;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String slotId;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String slotTitle;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long slotTableStartAt;

  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String programId;

  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long watchStartAt;

  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long watchEndAt;

  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long elapsedTime;

  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long startPosition;

  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long endPosition;

  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean reserveWatching;

  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean timeshiftWatching;

  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean offlineWatching;

  @WireField(
      tag = 16,
      adapter = "tv.abema.protos.MineFromType#ADAPTER"
  )
  public final MineFromType fromType;

  @WireField(
      tag = 17,
      adapter = "tv.abema.protos.MinePlayerType#ADAPTER"
  )
  public final MinePlayerType playerType;

  @WireField(
      tag = 18,
      adapter = "tv.abema.protos.MineNetworkType#ADAPTER"
  )
  public final MineNetworkType networkType;

  @WireField(
      tag = 19,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean complete;

  @WireField(
      tag = 20,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean allowNotifications;

  @WireField(
      tag = 21,
      adapter = "tv.abema.protos.MineAdSpotType#ADAPTER"
  )
  public final MineAdSpotType adSpotType;

  @WireField(
      tag = 22,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer adSpotSequence;

  @WireField(
      tag = 23,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long adSpotDuration;

  @WireField(
      tag = 24,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String pushId;

  @WireField(
      tag = 25,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String pushText;

  @WireField(
      tag = 26,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String algorithm;

  @WireField(
      tag = 27,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long currentPosition;

  @WireField(
      tag = 28,
      adapter = "tv.abema.protos.MineSnsType#ADAPTER"
  )
  public final MineSnsType snsType;

  @WireField(
      tag = 29,
      adapter = "tv.abema.protos.MineShareType#ADAPTER"
  )
  public final MineShareType shareType;

  @WireField(
      tag = 30,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String shareComment;

  @WireField(
      tag = 31,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String fillerId;

  @WireField(
      tag = 32,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean duringOnAir;

  @WireField(
      tag = 33,
      adapter = "tv.abema.protos.MineReserveType#ADAPTER"
  )
  public final MineReserveType reserveType;

  @WireField(
      tag = 34,
      adapter = "tv.abema.protos.MineMethodType#ADAPTER"
  )
  public final MineMethodType methodType;

  @WireField(
      tag = 35,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String comment;

  @WireField(
      tag = 36,
      adapter = "tv.abema.protos.MineGenderType#ADAPTER"
  )
  public final MineGenderType genderType;

  @WireField(
      tag = 37,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer birthYear;

  @WireField(
      tag = 38,
      adapter = "tv.abema.protos.MinePrefectureType#ADAPTER"
  )
  public final MinePrefectureType prefecture;

  @WireField(
      tag = 39,
      adapter = "tv.abema.protos.MineBookmarkType#ADAPTER"
  )
  public final MineBookmarkType bookmarkType;

  @WireField(
      tag = 40,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String slotGroupId;

  @WireField(
      tag = 41,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String promotedSlotId;

  @WireField(
      tag = 42,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String gaCid;

  @WireField(
      tag = 43,
      adapter = "tv.abema.protos.MineFillerType#ADAPTER"
  )
  public final MineFillerType fillerType;

  @WireField(
      tag = 44,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String questionId;

  @WireField(
      tag = 45,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer choiceNumber;

  @WireField(
      tag = 46,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean allowSpecificNotifications;

  @WireField(
      tag = 47,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean portrait;

  @WireField(
      tag = 48,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String cuePointId;

  @WireField(
      tag = 49,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String creativeId;

  @WireField(
      tag = 50,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean freeProgram;

  @WireField(
      tag = 51,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String androidId;

  @WireField(
      tag = 52,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String buildSerial;

  @WireField(
      tag = 53,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String xuniq;

  @WireField(
      tag = 54,
      adapter = "com.squareup.wire.ProtoAdapter#FLOAT"
  )
  public final Float speedRate;

  public MineContents(String channelId, String channelName, Integer channelOrder, String slotId, String slotTitle, Long slotTableStartAt, String programId, Long watchStartAt, Long watchEndAt, Long elapsedTime, Long startPosition, Long endPosition, Boolean reserveWatching, Boolean timeshiftWatching, Boolean offlineWatching, MineFromType fromType, MinePlayerType playerType, MineNetworkType networkType, Boolean complete, Boolean allowNotifications, MineAdSpotType adSpotType, Integer adSpotSequence, Long adSpotDuration, String pushId, String pushText, String algorithm, Long currentPosition, MineSnsType snsType, MineShareType shareType, String shareComment, String fillerId, Boolean duringOnAir, MineReserveType reserveType, MineMethodType methodType, String comment, MineGenderType genderType, Integer birthYear, MinePrefectureType prefecture, MineBookmarkType bookmarkType, String slotGroupId, String promotedSlotId, String gaCid, MineFillerType fillerType, String questionId, Integer choiceNumber, Boolean allowSpecificNotifications, Boolean portrait, String cuePointId, String creativeId, Boolean freeProgram, String androidId, String buildSerial, String xuniq, Float speedRate) {
    this(channelId, channelName, channelOrder, slotId, slotTitle, slotTableStartAt, programId, watchStartAt, watchEndAt, elapsedTime, startPosition, endPosition, reserveWatching, timeshiftWatching, offlineWatching, fromType, playerType, networkType, complete, allowNotifications, adSpotType, adSpotSequence, adSpotDuration, pushId, pushText, algorithm, currentPosition, snsType, shareType, shareComment, fillerId, duringOnAir, reserveType, methodType, comment, genderType, birthYear, prefecture, bookmarkType, slotGroupId, promotedSlotId, gaCid, fillerType, questionId, choiceNumber, allowSpecificNotifications, portrait, cuePointId, creativeId, freeProgram, androidId, buildSerial, xuniq, speedRate, ByteString.EMPTY);
  }

  public MineContents(String channelId, String channelName, Integer channelOrder, String slotId, String slotTitle, Long slotTableStartAt, String programId, Long watchStartAt, Long watchEndAt, Long elapsedTime, Long startPosition, Long endPosition, Boolean reserveWatching, Boolean timeshiftWatching, Boolean offlineWatching, MineFromType fromType, MinePlayerType playerType, MineNetworkType networkType, Boolean complete, Boolean allowNotifications, MineAdSpotType adSpotType, Integer adSpotSequence, Long adSpotDuration, String pushId, String pushText, String algorithm, Long currentPosition, MineSnsType snsType, MineShareType shareType, String shareComment, String fillerId, Boolean duringOnAir, MineReserveType reserveType, MineMethodType methodType, String comment, MineGenderType genderType, Integer birthYear, MinePrefectureType prefecture, MineBookmarkType bookmarkType, String slotGroupId, String promotedSlotId, String gaCid, MineFillerType fillerType, String questionId, Integer choiceNumber, Boolean allowSpecificNotifications, Boolean portrait, String cuePointId, String creativeId, Boolean freeProgram, String androidId, String buildSerial, String xuniq, Float speedRate, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.channelId = channelId;
    this.channelName = channelName;
    this.channelOrder = channelOrder;
    this.slotId = slotId;
    this.slotTitle = slotTitle;
    this.slotTableStartAt = slotTableStartAt;
    this.programId = programId;
    this.watchStartAt = watchStartAt;
    this.watchEndAt = watchEndAt;
    this.elapsedTime = elapsedTime;
    this.startPosition = startPosition;
    this.endPosition = endPosition;
    this.reserveWatching = reserveWatching;
    this.timeshiftWatching = timeshiftWatching;
    this.offlineWatching = offlineWatching;
    this.fromType = fromType;
    this.playerType = playerType;
    this.networkType = networkType;
    this.complete = complete;
    this.allowNotifications = allowNotifications;
    this.adSpotType = adSpotType;
    this.adSpotSequence = adSpotSequence;
    this.adSpotDuration = adSpotDuration;
    this.pushId = pushId;
    this.pushText = pushText;
    this.algorithm = algorithm;
    this.currentPosition = currentPosition;
    this.snsType = snsType;
    this.shareType = shareType;
    this.shareComment = shareComment;
    this.fillerId = fillerId;
    this.duringOnAir = duringOnAir;
    this.reserveType = reserveType;
    this.methodType = methodType;
    this.comment = comment;
    this.genderType = genderType;
    this.birthYear = birthYear;
    this.prefecture = prefecture;
    this.bookmarkType = bookmarkType;
    this.slotGroupId = slotGroupId;
    this.promotedSlotId = promotedSlotId;
    this.gaCid = gaCid;
    this.fillerType = fillerType;
    this.questionId = questionId;
    this.choiceNumber = choiceNumber;
    this.allowSpecificNotifications = allowSpecificNotifications;
    this.portrait = portrait;
    this.cuePointId = cuePointId;
    this.creativeId = creativeId;
    this.freeProgram = freeProgram;
    this.androidId = androidId;
    this.buildSerial = buildSerial;
    this.xuniq = xuniq;
    this.speedRate = speedRate;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.channelId = channelId;
    builder.channelName = channelName;
    builder.channelOrder = channelOrder;
    builder.slotId = slotId;
    builder.slotTitle = slotTitle;
    builder.slotTableStartAt = slotTableStartAt;
    builder.programId = programId;
    builder.watchStartAt = watchStartAt;
    builder.watchEndAt = watchEndAt;
    builder.elapsedTime = elapsedTime;
    builder.startPosition = startPosition;
    builder.endPosition = endPosition;
    builder.reserveWatching = reserveWatching;
    builder.timeshiftWatching = timeshiftWatching;
    builder.offlineWatching = offlineWatching;
    builder.fromType = fromType;
    builder.playerType = playerType;
    builder.networkType = networkType;
    builder.complete = complete;
    builder.allowNotifications = allowNotifications;
    builder.adSpotType = adSpotType;
    builder.adSpotSequence = adSpotSequence;
    builder.adSpotDuration = adSpotDuration;
    builder.pushId = pushId;
    builder.pushText = pushText;
    builder.algorithm = algorithm;
    builder.currentPosition = currentPosition;
    builder.snsType = snsType;
    builder.shareType = shareType;
    builder.shareComment = shareComment;
    builder.fillerId = fillerId;
    builder.duringOnAir = duringOnAir;
    builder.reserveType = reserveType;
    builder.methodType = methodType;
    builder.comment = comment;
    builder.genderType = genderType;
    builder.birthYear = birthYear;
    builder.prefecture = prefecture;
    builder.bookmarkType = bookmarkType;
    builder.slotGroupId = slotGroupId;
    builder.promotedSlotId = promotedSlotId;
    builder.gaCid = gaCid;
    builder.fillerType = fillerType;
    builder.questionId = questionId;
    builder.choiceNumber = choiceNumber;
    builder.allowSpecificNotifications = allowSpecificNotifications;
    builder.portrait = portrait;
    builder.cuePointId = cuePointId;
    builder.creativeId = creativeId;
    builder.freeProgram = freeProgram;
    builder.androidId = androidId;
    builder.buildSerial = buildSerial;
    builder.xuniq = xuniq;
    builder.speedRate = speedRate;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof MineContents)) return false;
    MineContents o = (MineContents) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(channelId, o.channelId)
        && Internal.equals(channelName, o.channelName)
        && Internal.equals(channelOrder, o.channelOrder)
        && Internal.equals(slotId, o.slotId)
        && Internal.equals(slotTitle, o.slotTitle)
        && Internal.equals(slotTableStartAt, o.slotTableStartAt)
        && Internal.equals(programId, o.programId)
        && Internal.equals(watchStartAt, o.watchStartAt)
        && Internal.equals(watchEndAt, o.watchEndAt)
        && Internal.equals(elapsedTime, o.elapsedTime)
        && Internal.equals(startPosition, o.startPosition)
        && Internal.equals(endPosition, o.endPosition)
        && Internal.equals(reserveWatching, o.reserveWatching)
        && Internal.equals(timeshiftWatching, o.timeshiftWatching)
        && Internal.equals(offlineWatching, o.offlineWatching)
        && Internal.equals(fromType, o.fromType)
        && Internal.equals(playerType, o.playerType)
        && Internal.equals(networkType, o.networkType)
        && Internal.equals(complete, o.complete)
        && Internal.equals(allowNotifications, o.allowNotifications)
        && Internal.equals(adSpotType, o.adSpotType)
        && Internal.equals(adSpotSequence, o.adSpotSequence)
        && Internal.equals(adSpotDuration, o.adSpotDuration)
        && Internal.equals(pushId, o.pushId)
        && Internal.equals(pushText, o.pushText)
        && Internal.equals(algorithm, o.algorithm)
        && Internal.equals(currentPosition, o.currentPosition)
        && Internal.equals(snsType, o.snsType)
        && Internal.equals(shareType, o.shareType)
        && Internal.equals(shareComment, o.shareComment)
        && Internal.equals(fillerId, o.fillerId)
        && Internal.equals(duringOnAir, o.duringOnAir)
        && Internal.equals(reserveType, o.reserveType)
        && Internal.equals(methodType, o.methodType)
        && Internal.equals(comment, o.comment)
        && Internal.equals(genderType, o.genderType)
        && Internal.equals(birthYear, o.birthYear)
        && Internal.equals(prefecture, o.prefecture)
        && Internal.equals(bookmarkType, o.bookmarkType)
        && Internal.equals(slotGroupId, o.slotGroupId)
        && Internal.equals(promotedSlotId, o.promotedSlotId)
        && Internal.equals(gaCid, o.gaCid)
        && Internal.equals(fillerType, o.fillerType)
        && Internal.equals(questionId, o.questionId)
        && Internal.equals(choiceNumber, o.choiceNumber)
        && Internal.equals(allowSpecificNotifications, o.allowSpecificNotifications)
        && Internal.equals(portrait, o.portrait)
        && Internal.equals(cuePointId, o.cuePointId)
        && Internal.equals(creativeId, o.creativeId)
        && Internal.equals(freeProgram, o.freeProgram)
        && Internal.equals(androidId, o.androidId)
        && Internal.equals(buildSerial, o.buildSerial)
        && Internal.equals(xuniq, o.xuniq)
        && Internal.equals(speedRate, o.speedRate);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (channelId != null ? channelId.hashCode() : 0);
      result = result * 37 + (channelName != null ? channelName.hashCode() : 0);
      result = result * 37 + (channelOrder != null ? channelOrder.hashCode() : 0);
      result = result * 37 + (slotId != null ? slotId.hashCode() : 0);
      result = result * 37 + (slotTitle != null ? slotTitle.hashCode() : 0);
      result = result * 37 + (slotTableStartAt != null ? slotTableStartAt.hashCode() : 0);
      result = result * 37 + (programId != null ? programId.hashCode() : 0);
      result = result * 37 + (watchStartAt != null ? watchStartAt.hashCode() : 0);
      result = result * 37 + (watchEndAt != null ? watchEndAt.hashCode() : 0);
      result = result * 37 + (elapsedTime != null ? elapsedTime.hashCode() : 0);
      result = result * 37 + (startPosition != null ? startPosition.hashCode() : 0);
      result = result * 37 + (endPosition != null ? endPosition.hashCode() : 0);
      result = result * 37 + (reserveWatching != null ? reserveWatching.hashCode() : 0);
      result = result * 37 + (timeshiftWatching != null ? timeshiftWatching.hashCode() : 0);
      result = result * 37 + (offlineWatching != null ? offlineWatching.hashCode() : 0);
      result = result * 37 + (fromType != null ? fromType.hashCode() : 0);
      result = result * 37 + (playerType != null ? playerType.hashCode() : 0);
      result = result * 37 + (networkType != null ? networkType.hashCode() : 0);
      result = result * 37 + (complete != null ? complete.hashCode() : 0);
      result = result * 37 + (allowNotifications != null ? allowNotifications.hashCode() : 0);
      result = result * 37 + (adSpotType != null ? adSpotType.hashCode() : 0);
      result = result * 37 + (adSpotSequence != null ? adSpotSequence.hashCode() : 0);
      result = result * 37 + (adSpotDuration != null ? adSpotDuration.hashCode() : 0);
      result = result * 37 + (pushId != null ? pushId.hashCode() : 0);
      result = result * 37 + (pushText != null ? pushText.hashCode() : 0);
      result = result * 37 + (algorithm != null ? algorithm.hashCode() : 0);
      result = result * 37 + (currentPosition != null ? currentPosition.hashCode() : 0);
      result = result * 37 + (snsType != null ? snsType.hashCode() : 0);
      result = result * 37 + (shareType != null ? shareType.hashCode() : 0);
      result = result * 37 + (shareComment != null ? shareComment.hashCode() : 0);
      result = result * 37 + (fillerId != null ? fillerId.hashCode() : 0);
      result = result * 37 + (duringOnAir != null ? duringOnAir.hashCode() : 0);
      result = result * 37 + (reserveType != null ? reserveType.hashCode() : 0);
      result = result * 37 + (methodType != null ? methodType.hashCode() : 0);
      result = result * 37 + (comment != null ? comment.hashCode() : 0);
      result = result * 37 + (genderType != null ? genderType.hashCode() : 0);
      result = result * 37 + (birthYear != null ? birthYear.hashCode() : 0);
      result = result * 37 + (prefecture != null ? prefecture.hashCode() : 0);
      result = result * 37 + (bookmarkType != null ? bookmarkType.hashCode() : 0);
      result = result * 37 + (slotGroupId != null ? slotGroupId.hashCode() : 0);
      result = result * 37 + (promotedSlotId != null ? promotedSlotId.hashCode() : 0);
      result = result * 37 + (gaCid != null ? gaCid.hashCode() : 0);
      result = result * 37 + (fillerType != null ? fillerType.hashCode() : 0);
      result = result * 37 + (questionId != null ? questionId.hashCode() : 0);
      result = result * 37 + (choiceNumber != null ? choiceNumber.hashCode() : 0);
      result = result * 37 + (allowSpecificNotifications != null ? allowSpecificNotifications.hashCode() : 0);
      result = result * 37 + (portrait != null ? portrait.hashCode() : 0);
      result = result * 37 + (cuePointId != null ? cuePointId.hashCode() : 0);
      result = result * 37 + (creativeId != null ? creativeId.hashCode() : 0);
      result = result * 37 + (freeProgram != null ? freeProgram.hashCode() : 0);
      result = result * 37 + (androidId != null ? androidId.hashCode() : 0);
      result = result * 37 + (buildSerial != null ? buildSerial.hashCode() : 0);
      result = result * 37 + (xuniq != null ? xuniq.hashCode() : 0);
      result = result * 37 + (speedRate != null ? speedRate.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (channelId != null) builder.append(", channelId=").append(channelId);
    if (channelName != null) builder.append(", channelName=").append(channelName);
    if (channelOrder != null) builder.append(", channelOrder=").append(channelOrder);
    if (slotId != null) builder.append(", slotId=").append(slotId);
    if (slotTitle != null) builder.append(", slotTitle=").append(slotTitle);
    if (slotTableStartAt != null) builder.append(", slotTableStartAt=").append(slotTableStartAt);
    if (programId != null) builder.append(", programId=").append(programId);
    if (watchStartAt != null) builder.append(", watchStartAt=").append(watchStartAt);
    if (watchEndAt != null) builder.append(", watchEndAt=").append(watchEndAt);
    if (elapsedTime != null) builder.append(", elapsedTime=").append(elapsedTime);
    if (startPosition != null) builder.append(", startPosition=").append(startPosition);
    if (endPosition != null) builder.append(", endPosition=").append(endPosition);
    if (reserveWatching != null) builder.append(", reserveWatching=").append(reserveWatching);
    if (timeshiftWatching != null) builder.append(", timeshiftWatching=").append(timeshiftWatching);
    if (offlineWatching != null) builder.append(", offlineWatching=").append(offlineWatching);
    if (fromType != null) builder.append(", fromType=").append(fromType);
    if (playerType != null) builder.append(", playerType=").append(playerType);
    if (networkType != null) builder.append(", networkType=").append(networkType);
    if (complete != null) builder.append(", complete=").append(complete);
    if (allowNotifications != null) builder.append(", allowNotifications=").append(allowNotifications);
    if (adSpotType != null) builder.append(", adSpotType=").append(adSpotType);
    if (adSpotSequence != null) builder.append(", adSpotSequence=").append(adSpotSequence);
    if (adSpotDuration != null) builder.append(", adSpotDuration=").append(adSpotDuration);
    if (pushId != null) builder.append(", pushId=").append(pushId);
    if (pushText != null) builder.append(", pushText=").append(pushText);
    if (algorithm != null) builder.append(", algorithm=").append(algorithm);
    if (currentPosition != null) builder.append(", currentPosition=").append(currentPosition);
    if (snsType != null) builder.append(", snsType=").append(snsType);
    if (shareType != null) builder.append(", shareType=").append(shareType);
    if (shareComment != null) builder.append(", shareComment=").append(shareComment);
    if (fillerId != null) builder.append(", fillerId=").append(fillerId);
    if (duringOnAir != null) builder.append(", duringOnAir=").append(duringOnAir);
    if (reserveType != null) builder.append(", reserveType=").append(reserveType);
    if (methodType != null) builder.append(", methodType=").append(methodType);
    if (comment != null) builder.append(", comment=").append(comment);
    if (genderType != null) builder.append(", genderType=").append(genderType);
    if (birthYear != null) builder.append(", birthYear=").append(birthYear);
    if (prefecture != null) builder.append(", prefecture=").append(prefecture);
    if (bookmarkType != null) builder.append(", bookmarkType=").append(bookmarkType);
    if (slotGroupId != null) builder.append(", slotGroupId=").append(slotGroupId);
    if (promotedSlotId != null) builder.append(", promotedSlotId=").append(promotedSlotId);
    if (gaCid != null) builder.append(", gaCid=").append(gaCid);
    if (fillerType != null) builder.append(", fillerType=").append(fillerType);
    if (questionId != null) builder.append(", questionId=").append(questionId);
    if (choiceNumber != null) builder.append(", choiceNumber=").append(choiceNumber);
    if (allowSpecificNotifications != null) builder.append(", allowSpecificNotifications=").append(allowSpecificNotifications);
    if (portrait != null) builder.append(", portrait=").append(portrait);
    if (cuePointId != null) builder.append(", cuePointId=").append(cuePointId);
    if (creativeId != null) builder.append(", creativeId=").append(creativeId);
    if (freeProgram != null) builder.append(", freeProgram=").append(freeProgram);
    if (androidId != null) builder.append(", androidId=").append(androidId);
    if (buildSerial != null) builder.append(", buildSerial=").append(buildSerial);
    if (xuniq != null) builder.append(", xuniq=").append(xuniq);
    if (speedRate != null) builder.append(", speedRate=").append(speedRate);
    return builder.replace(0, 2, "MineContents{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<MineContents, Builder> {
    public String channelId;

    public String channelName;

    public Integer channelOrder;

    public String slotId;

    public String slotTitle;

    public Long slotTableStartAt;

    public String programId;

    public Long watchStartAt;

    public Long watchEndAt;

    public Long elapsedTime;

    public Long startPosition;

    public Long endPosition;

    public Boolean reserveWatching;

    public Boolean timeshiftWatching;

    public Boolean offlineWatching;

    public MineFromType fromType;

    public MinePlayerType playerType;

    public MineNetworkType networkType;

    public Boolean complete;

    public Boolean allowNotifications;

    public MineAdSpotType adSpotType;

    public Integer adSpotSequence;

    public Long adSpotDuration;

    public String pushId;

    public String pushText;

    public String algorithm;

    public Long currentPosition;

    public MineSnsType snsType;

    public MineShareType shareType;

    public String shareComment;

    public String fillerId;

    public Boolean duringOnAir;

    public MineReserveType reserveType;

    public MineMethodType methodType;

    public String comment;

    public MineGenderType genderType;

    public Integer birthYear;

    public MinePrefectureType prefecture;

    public MineBookmarkType bookmarkType;

    public String slotGroupId;

    public String promotedSlotId;

    public String gaCid;

    public MineFillerType fillerType;

    public String questionId;

    public Integer choiceNumber;

    public Boolean allowSpecificNotifications;

    public Boolean portrait;

    public String cuePointId;

    public String creativeId;

    public Boolean freeProgram;

    public String androidId;

    public String buildSerial;

    public String xuniq;

    public Float speedRate;

    public Builder() {
    }

    public Builder channelId(String channelId) {
      this.channelId = channelId;
      return this;
    }

    public Builder channelName(String channelName) {
      this.channelName = channelName;
      return this;
    }

    public Builder channelOrder(Integer channelOrder) {
      this.channelOrder = channelOrder;
      return this;
    }

    public Builder slotId(String slotId) {
      this.slotId = slotId;
      return this;
    }

    public Builder slotTitle(String slotTitle) {
      this.slotTitle = slotTitle;
      return this;
    }

    public Builder slotTableStartAt(Long slotTableStartAt) {
      this.slotTableStartAt = slotTableStartAt;
      return this;
    }

    public Builder programId(String programId) {
      this.programId = programId;
      return this;
    }

    public Builder watchStartAt(Long watchStartAt) {
      this.watchStartAt = watchStartAt;
      return this;
    }

    public Builder watchEndAt(Long watchEndAt) {
      this.watchEndAt = watchEndAt;
      return this;
    }

    public Builder elapsedTime(Long elapsedTime) {
      this.elapsedTime = elapsedTime;
      return this;
    }

    public Builder startPosition(Long startPosition) {
      this.startPosition = startPosition;
      return this;
    }

    public Builder endPosition(Long endPosition) {
      this.endPosition = endPosition;
      return this;
    }

    public Builder reserveWatching(Boolean reserveWatching) {
      this.reserveWatching = reserveWatching;
      return this;
    }

    public Builder timeshiftWatching(Boolean timeshiftWatching) {
      this.timeshiftWatching = timeshiftWatching;
      return this;
    }

    public Builder offlineWatching(Boolean offlineWatching) {
      this.offlineWatching = offlineWatching;
      return this;
    }

    public Builder fromType(MineFromType fromType) {
      this.fromType = fromType;
      return this;
    }

    public Builder playerType(MinePlayerType playerType) {
      this.playerType = playerType;
      return this;
    }

    public Builder networkType(MineNetworkType networkType) {
      this.networkType = networkType;
      return this;
    }

    public Builder complete(Boolean complete) {
      this.complete = complete;
      return this;
    }

    public Builder allowNotifications(Boolean allowNotifications) {
      this.allowNotifications = allowNotifications;
      return this;
    }

    public Builder adSpotType(MineAdSpotType adSpotType) {
      this.adSpotType = adSpotType;
      return this;
    }

    public Builder adSpotSequence(Integer adSpotSequence) {
      this.adSpotSequence = adSpotSequence;
      return this;
    }

    public Builder adSpotDuration(Long adSpotDuration) {
      this.adSpotDuration = adSpotDuration;
      return this;
    }

    public Builder pushId(String pushId) {
      this.pushId = pushId;
      return this;
    }

    public Builder pushText(String pushText) {
      this.pushText = pushText;
      return this;
    }

    public Builder algorithm(String algorithm) {
      this.algorithm = algorithm;
      return this;
    }

    public Builder currentPosition(Long currentPosition) {
      this.currentPosition = currentPosition;
      return this;
    }

    public Builder snsType(MineSnsType snsType) {
      this.snsType = snsType;
      return this;
    }

    public Builder shareType(MineShareType shareType) {
      this.shareType = shareType;
      return this;
    }

    public Builder shareComment(String shareComment) {
      this.shareComment = shareComment;
      return this;
    }

    public Builder fillerId(String fillerId) {
      this.fillerId = fillerId;
      return this;
    }

    public Builder duringOnAir(Boolean duringOnAir) {
      this.duringOnAir = duringOnAir;
      return this;
    }

    public Builder reserveType(MineReserveType reserveType) {
      this.reserveType = reserveType;
      return this;
    }

    public Builder methodType(MineMethodType methodType) {
      this.methodType = methodType;
      return this;
    }

    public Builder comment(String comment) {
      this.comment = comment;
      return this;
    }

    public Builder genderType(MineGenderType genderType) {
      this.genderType = genderType;
      return this;
    }

    public Builder birthYear(Integer birthYear) {
      this.birthYear = birthYear;
      return this;
    }

    public Builder prefecture(MinePrefectureType prefecture) {
      this.prefecture = prefecture;
      return this;
    }

    public Builder bookmarkType(MineBookmarkType bookmarkType) {
      this.bookmarkType = bookmarkType;
      return this;
    }

    public Builder slotGroupId(String slotGroupId) {
      this.slotGroupId = slotGroupId;
      return this;
    }

    public Builder promotedSlotId(String promotedSlotId) {
      this.promotedSlotId = promotedSlotId;
      return this;
    }

    public Builder gaCid(String gaCid) {
      this.gaCid = gaCid;
      return this;
    }

    public Builder fillerType(MineFillerType fillerType) {
      this.fillerType = fillerType;
      return this;
    }

    public Builder questionId(String questionId) {
      this.questionId = questionId;
      return this;
    }

    public Builder choiceNumber(Integer choiceNumber) {
      this.choiceNumber = choiceNumber;
      return this;
    }

    public Builder allowSpecificNotifications(Boolean allowSpecificNotifications) {
      this.allowSpecificNotifications = allowSpecificNotifications;
      return this;
    }

    public Builder portrait(Boolean portrait) {
      this.portrait = portrait;
      return this;
    }

    public Builder cuePointId(String cuePointId) {
      this.cuePointId = cuePointId;
      return this;
    }

    public Builder creativeId(String creativeId) {
      this.creativeId = creativeId;
      return this;
    }

    public Builder freeProgram(Boolean freeProgram) {
      this.freeProgram = freeProgram;
      return this;
    }

    public Builder androidId(String androidId) {
      this.androidId = androidId;
      return this;
    }

    public Builder buildSerial(String buildSerial) {
      this.buildSerial = buildSerial;
      return this;
    }

    public Builder xuniq(String xuniq) {
      this.xuniq = xuniq;
      return this;
    }

    public Builder speedRate(Float speedRate) {
      this.speedRate = speedRate;
      return this;
    }

    @Override
    public MineContents build() {
      return new MineContents(channelId, channelName, channelOrder, slotId, slotTitle, slotTableStartAt, programId, watchStartAt, watchEndAt, elapsedTime, startPosition, endPosition, reserveWatching, timeshiftWatching, offlineWatching, fromType, playerType, networkType, complete, allowNotifications, adSpotType, adSpotSequence, adSpotDuration, pushId, pushText, algorithm, currentPosition, snsType, shareType, shareComment, fillerId, duringOnAir, reserveType, methodType, comment, genderType, birthYear, prefecture, bookmarkType, slotGroupId, promotedSlotId, gaCid, fillerType, questionId, choiceNumber, allowSpecificNotifications, portrait, cuePointId, creativeId, freeProgram, androidId, buildSerial, xuniq, speedRate, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_MineContents extends ProtoAdapter<MineContents> {
    ProtoAdapter_MineContents() {
      super(FieldEncoding.LENGTH_DELIMITED, MineContents.class);
    }

    @Override
    public int encodedSize(MineContents value) {
      return (value.channelId != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.channelId) : 0)
          + (value.channelName != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.channelName) : 0)
          + (value.channelOrder != null ? ProtoAdapter.INT32.encodedSizeWithTag(3, value.channelOrder) : 0)
          + (value.slotId != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.slotId) : 0)
          + (value.slotTitle != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.slotTitle) : 0)
          + (value.slotTableStartAt != null ? ProtoAdapter.INT64.encodedSizeWithTag(6, value.slotTableStartAt) : 0)
          + (value.programId != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.programId) : 0)
          + (value.watchStartAt != null ? ProtoAdapter.INT64.encodedSizeWithTag(8, value.watchStartAt) : 0)
          + (value.watchEndAt != null ? ProtoAdapter.INT64.encodedSizeWithTag(9, value.watchEndAt) : 0)
          + (value.elapsedTime != null ? ProtoAdapter.INT64.encodedSizeWithTag(10, value.elapsedTime) : 0)
          + (value.startPosition != null ? ProtoAdapter.INT64.encodedSizeWithTag(11, value.startPosition) : 0)
          + (value.endPosition != null ? ProtoAdapter.INT64.encodedSizeWithTag(12, value.endPosition) : 0)
          + (value.reserveWatching != null ? ProtoAdapter.BOOL.encodedSizeWithTag(13, value.reserveWatching) : 0)
          + (value.timeshiftWatching != null ? ProtoAdapter.BOOL.encodedSizeWithTag(14, value.timeshiftWatching) : 0)
          + (value.offlineWatching != null ? ProtoAdapter.BOOL.encodedSizeWithTag(15, value.offlineWatching) : 0)
          + (value.fromType != null ? MineFromType.ADAPTER.encodedSizeWithTag(16, value.fromType) : 0)
          + (value.playerType != null ? MinePlayerType.ADAPTER.encodedSizeWithTag(17, value.playerType) : 0)
          + (value.networkType != null ? MineNetworkType.ADAPTER.encodedSizeWithTag(18, value.networkType) : 0)
          + (value.complete != null ? ProtoAdapter.BOOL.encodedSizeWithTag(19, value.complete) : 0)
          + (value.allowNotifications != null ? ProtoAdapter.BOOL.encodedSizeWithTag(20, value.allowNotifications) : 0)
          + (value.adSpotType != null ? MineAdSpotType.ADAPTER.encodedSizeWithTag(21, value.adSpotType) : 0)
          + (value.adSpotSequence != null ? ProtoAdapter.INT32.encodedSizeWithTag(22, value.adSpotSequence) : 0)
          + (value.adSpotDuration != null ? ProtoAdapter.INT64.encodedSizeWithTag(23, value.adSpotDuration) : 0)
          + (value.pushId != null ? ProtoAdapter.STRING.encodedSizeWithTag(24, value.pushId) : 0)
          + (value.pushText != null ? ProtoAdapter.STRING.encodedSizeWithTag(25, value.pushText) : 0)
          + (value.algorithm != null ? ProtoAdapter.STRING.encodedSizeWithTag(26, value.algorithm) : 0)
          + (value.currentPosition != null ? ProtoAdapter.INT64.encodedSizeWithTag(27, value.currentPosition) : 0)
          + (value.snsType != null ? MineSnsType.ADAPTER.encodedSizeWithTag(28, value.snsType) : 0)
          + (value.shareType != null ? MineShareType.ADAPTER.encodedSizeWithTag(29, value.shareType) : 0)
          + (value.shareComment != null ? ProtoAdapter.STRING.encodedSizeWithTag(30, value.shareComment) : 0)
          + (value.fillerId != null ? ProtoAdapter.STRING.encodedSizeWithTag(31, value.fillerId) : 0)
          + (value.duringOnAir != null ? ProtoAdapter.BOOL.encodedSizeWithTag(32, value.duringOnAir) : 0)
          + (value.reserveType != null ? MineReserveType.ADAPTER.encodedSizeWithTag(33, value.reserveType) : 0)
          + (value.methodType != null ? MineMethodType.ADAPTER.encodedSizeWithTag(34, value.methodType) : 0)
          + (value.comment != null ? ProtoAdapter.STRING.encodedSizeWithTag(35, value.comment) : 0)
          + (value.genderType != null ? MineGenderType.ADAPTER.encodedSizeWithTag(36, value.genderType) : 0)
          + (value.birthYear != null ? ProtoAdapter.INT32.encodedSizeWithTag(37, value.birthYear) : 0)
          + (value.prefecture != null ? MinePrefectureType.ADAPTER.encodedSizeWithTag(38, value.prefecture) : 0)
          + (value.bookmarkType != null ? MineBookmarkType.ADAPTER.encodedSizeWithTag(39, value.bookmarkType) : 0)
          + (value.slotGroupId != null ? ProtoAdapter.STRING.encodedSizeWithTag(40, value.slotGroupId) : 0)
          + (value.promotedSlotId != null ? ProtoAdapter.STRING.encodedSizeWithTag(41, value.promotedSlotId) : 0)
          + (value.gaCid != null ? ProtoAdapter.STRING.encodedSizeWithTag(42, value.gaCid) : 0)
          + (value.fillerType != null ? MineFillerType.ADAPTER.encodedSizeWithTag(43, value.fillerType) : 0)
          + (value.questionId != null ? ProtoAdapter.STRING.encodedSizeWithTag(44, value.questionId) : 0)
          + (value.choiceNumber != null ? ProtoAdapter.INT32.encodedSizeWithTag(45, value.choiceNumber) : 0)
          + (value.allowSpecificNotifications != null ? ProtoAdapter.BOOL.encodedSizeWithTag(46, value.allowSpecificNotifications) : 0)
          + (value.portrait != null ? ProtoAdapter.BOOL.encodedSizeWithTag(47, value.portrait) : 0)
          + (value.cuePointId != null ? ProtoAdapter.STRING.encodedSizeWithTag(48, value.cuePointId) : 0)
          + (value.creativeId != null ? ProtoAdapter.STRING.encodedSizeWithTag(49, value.creativeId) : 0)
          + (value.freeProgram != null ? ProtoAdapter.BOOL.encodedSizeWithTag(50, value.freeProgram) : 0)
          + (value.androidId != null ? ProtoAdapter.STRING.encodedSizeWithTag(51, value.androidId) : 0)
          + (value.buildSerial != null ? ProtoAdapter.STRING.encodedSizeWithTag(52, value.buildSerial) : 0)
          + (value.xuniq != null ? ProtoAdapter.STRING.encodedSizeWithTag(53, value.xuniq) : 0)
          + (value.speedRate != null ? ProtoAdapter.FLOAT.encodedSizeWithTag(54, value.speedRate) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, MineContents value) throws IOException {
      if (value.channelId != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.channelId);
      if (value.channelName != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.channelName);
      if (value.channelOrder != null) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.channelOrder);
      if (value.slotId != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.slotId);
      if (value.slotTitle != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.slotTitle);
      if (value.slotTableStartAt != null) ProtoAdapter.INT64.encodeWithTag(writer, 6, value.slotTableStartAt);
      if (value.programId != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.programId);
      if (value.watchStartAt != null) ProtoAdapter.INT64.encodeWithTag(writer, 8, value.watchStartAt);
      if (value.watchEndAt != null) ProtoAdapter.INT64.encodeWithTag(writer, 9, value.watchEndAt);
      if (value.elapsedTime != null) ProtoAdapter.INT64.encodeWithTag(writer, 10, value.elapsedTime);
      if (value.startPosition != null) ProtoAdapter.INT64.encodeWithTag(writer, 11, value.startPosition);
      if (value.endPosition != null) ProtoAdapter.INT64.encodeWithTag(writer, 12, value.endPosition);
      if (value.reserveWatching != null) ProtoAdapter.BOOL.encodeWithTag(writer, 13, value.reserveWatching);
      if (value.timeshiftWatching != null) ProtoAdapter.BOOL.encodeWithTag(writer, 14, value.timeshiftWatching);
      if (value.offlineWatching != null) ProtoAdapter.BOOL.encodeWithTag(writer, 15, value.offlineWatching);
      if (value.fromType != null) MineFromType.ADAPTER.encodeWithTag(writer, 16, value.fromType);
      if (value.playerType != null) MinePlayerType.ADAPTER.encodeWithTag(writer, 17, value.playerType);
      if (value.networkType != null) MineNetworkType.ADAPTER.encodeWithTag(writer, 18, value.networkType);
      if (value.complete != null) ProtoAdapter.BOOL.encodeWithTag(writer, 19, value.complete);
      if (value.allowNotifications != null) ProtoAdapter.BOOL.encodeWithTag(writer, 20, value.allowNotifications);
      if (value.adSpotType != null) MineAdSpotType.ADAPTER.encodeWithTag(writer, 21, value.adSpotType);
      if (value.adSpotSequence != null) ProtoAdapter.INT32.encodeWithTag(writer, 22, value.adSpotSequence);
      if (value.adSpotDuration != null) ProtoAdapter.INT64.encodeWithTag(writer, 23, value.adSpotDuration);
      if (value.pushId != null) ProtoAdapter.STRING.encodeWithTag(writer, 24, value.pushId);
      if (value.pushText != null) ProtoAdapter.STRING.encodeWithTag(writer, 25, value.pushText);
      if (value.algorithm != null) ProtoAdapter.STRING.encodeWithTag(writer, 26, value.algorithm);
      if (value.currentPosition != null) ProtoAdapter.INT64.encodeWithTag(writer, 27, value.currentPosition);
      if (value.snsType != null) MineSnsType.ADAPTER.encodeWithTag(writer, 28, value.snsType);
      if (value.shareType != null) MineShareType.ADAPTER.encodeWithTag(writer, 29, value.shareType);
      if (value.shareComment != null) ProtoAdapter.STRING.encodeWithTag(writer, 30, value.shareComment);
      if (value.fillerId != null) ProtoAdapter.STRING.encodeWithTag(writer, 31, value.fillerId);
      if (value.duringOnAir != null) ProtoAdapter.BOOL.encodeWithTag(writer, 32, value.duringOnAir);
      if (value.reserveType != null) MineReserveType.ADAPTER.encodeWithTag(writer, 33, value.reserveType);
      if (value.methodType != null) MineMethodType.ADAPTER.encodeWithTag(writer, 34, value.methodType);
      if (value.comment != null) ProtoAdapter.STRING.encodeWithTag(writer, 35, value.comment);
      if (value.genderType != null) MineGenderType.ADAPTER.encodeWithTag(writer, 36, value.genderType);
      if (value.birthYear != null) ProtoAdapter.INT32.encodeWithTag(writer, 37, value.birthYear);
      if (value.prefecture != null) MinePrefectureType.ADAPTER.encodeWithTag(writer, 38, value.prefecture);
      if (value.bookmarkType != null) MineBookmarkType.ADAPTER.encodeWithTag(writer, 39, value.bookmarkType);
      if (value.slotGroupId != null) ProtoAdapter.STRING.encodeWithTag(writer, 40, value.slotGroupId);
      if (value.promotedSlotId != null) ProtoAdapter.STRING.encodeWithTag(writer, 41, value.promotedSlotId);
      if (value.gaCid != null) ProtoAdapter.STRING.encodeWithTag(writer, 42, value.gaCid);
      if (value.fillerType != null) MineFillerType.ADAPTER.encodeWithTag(writer, 43, value.fillerType);
      if (value.questionId != null) ProtoAdapter.STRING.encodeWithTag(writer, 44, value.questionId);
      if (value.choiceNumber != null) ProtoAdapter.INT32.encodeWithTag(writer, 45, value.choiceNumber);
      if (value.allowSpecificNotifications != null) ProtoAdapter.BOOL.encodeWithTag(writer, 46, value.allowSpecificNotifications);
      if (value.portrait != null) ProtoAdapter.BOOL.encodeWithTag(writer, 47, value.portrait);
      if (value.cuePointId != null) ProtoAdapter.STRING.encodeWithTag(writer, 48, value.cuePointId);
      if (value.creativeId != null) ProtoAdapter.STRING.encodeWithTag(writer, 49, value.creativeId);
      if (value.freeProgram != null) ProtoAdapter.BOOL.encodeWithTag(writer, 50, value.freeProgram);
      if (value.androidId != null) ProtoAdapter.STRING.encodeWithTag(writer, 51, value.androidId);
      if (value.buildSerial != null) ProtoAdapter.STRING.encodeWithTag(writer, 52, value.buildSerial);
      if (value.xuniq != null) ProtoAdapter.STRING.encodeWithTag(writer, 53, value.xuniq);
      if (value.speedRate != null) ProtoAdapter.FLOAT.encodeWithTag(writer, 54, value.speedRate);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public MineContents decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.channelId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.channelName(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.channelOrder(ProtoAdapter.INT32.decode(reader)); break;
          case 4: builder.slotId(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.slotTitle(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.slotTableStartAt(ProtoAdapter.INT64.decode(reader)); break;
          case 7: builder.programId(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.watchStartAt(ProtoAdapter.INT64.decode(reader)); break;
          case 9: builder.watchEndAt(ProtoAdapter.INT64.decode(reader)); break;
          case 10: builder.elapsedTime(ProtoAdapter.INT64.decode(reader)); break;
          case 11: builder.startPosition(ProtoAdapter.INT64.decode(reader)); break;
          case 12: builder.endPosition(ProtoAdapter.INT64.decode(reader)); break;
          case 13: builder.reserveWatching(ProtoAdapter.BOOL.decode(reader)); break;
          case 14: builder.timeshiftWatching(ProtoAdapter.BOOL.decode(reader)); break;
          case 15: builder.offlineWatching(ProtoAdapter.BOOL.decode(reader)); break;
          case 16: {
            try {
              builder.fromType(MineFromType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 17: {
            try {
              builder.playerType(MinePlayerType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 18: {
            try {
              builder.networkType(MineNetworkType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 19: builder.complete(ProtoAdapter.BOOL.decode(reader)); break;
          case 20: builder.allowNotifications(ProtoAdapter.BOOL.decode(reader)); break;
          case 21: {
            try {
              builder.adSpotType(MineAdSpotType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 22: builder.adSpotSequence(ProtoAdapter.INT32.decode(reader)); break;
          case 23: builder.adSpotDuration(ProtoAdapter.INT64.decode(reader)); break;
          case 24: builder.pushId(ProtoAdapter.STRING.decode(reader)); break;
          case 25: builder.pushText(ProtoAdapter.STRING.decode(reader)); break;
          case 26: builder.algorithm(ProtoAdapter.STRING.decode(reader)); break;
          case 27: builder.currentPosition(ProtoAdapter.INT64.decode(reader)); break;
          case 28: {
            try {
              builder.snsType(MineSnsType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 29: {
            try {
              builder.shareType(MineShareType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 30: builder.shareComment(ProtoAdapter.STRING.decode(reader)); break;
          case 31: builder.fillerId(ProtoAdapter.STRING.decode(reader)); break;
          case 32: builder.duringOnAir(ProtoAdapter.BOOL.decode(reader)); break;
          case 33: {
            try {
              builder.reserveType(MineReserveType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 34: {
            try {
              builder.methodType(MineMethodType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 35: builder.comment(ProtoAdapter.STRING.decode(reader)); break;
          case 36: {
            try {
              builder.genderType(MineGenderType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 37: builder.birthYear(ProtoAdapter.INT32.decode(reader)); break;
          case 38: {
            try {
              builder.prefecture(MinePrefectureType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 39: {
            try {
              builder.bookmarkType(MineBookmarkType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 40: builder.slotGroupId(ProtoAdapter.STRING.decode(reader)); break;
          case 41: builder.promotedSlotId(ProtoAdapter.STRING.decode(reader)); break;
          case 42: builder.gaCid(ProtoAdapter.STRING.decode(reader)); break;
          case 43: {
            try {
              builder.fillerType(MineFillerType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 44: builder.questionId(ProtoAdapter.STRING.decode(reader)); break;
          case 45: builder.choiceNumber(ProtoAdapter.INT32.decode(reader)); break;
          case 46: builder.allowSpecificNotifications(ProtoAdapter.BOOL.decode(reader)); break;
          case 47: builder.portrait(ProtoAdapter.BOOL.decode(reader)); break;
          case 48: builder.cuePointId(ProtoAdapter.STRING.decode(reader)); break;
          case 49: builder.creativeId(ProtoAdapter.STRING.decode(reader)); break;
          case 50: builder.freeProgram(ProtoAdapter.BOOL.decode(reader)); break;
          case 51: builder.androidId(ProtoAdapter.STRING.decode(reader)); break;
          case 52: builder.buildSerial(ProtoAdapter.STRING.decode(reader)); break;
          case 53: builder.xuniq(ProtoAdapter.STRING.decode(reader)); break;
          case 54: builder.speedRate(ProtoAdapter.FLOAT.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public MineContents redact(MineContents value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
