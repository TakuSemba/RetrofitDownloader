// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/video.proto at 46:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / ビデオ番組エピソード
 */
public final class VideoProgramEpisode extends Message<VideoProgramEpisode, VideoProgramEpisode.Builder> {
  public static final ProtoAdapter<VideoProgramEpisode> ADAPTER = new ProtoAdapter_VideoProgramEpisode();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_NUMBER = 0;

  public static final String DEFAULT_TITLE = "";

  public static final String DEFAULT_CONTENT = "";

  /**
   * / エピソード番号
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer number;

  /**
   * / タイトル
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String title;

  /**
   * / コンテンツ
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String content;

  public VideoProgramEpisode(Integer number, String title, String content) {
    this(number, title, content, ByteString.EMPTY);
  }

  public VideoProgramEpisode(Integer number, String title, String content, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.number = number;
    this.title = title;
    this.content = content;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.number = number;
    builder.title = title;
    builder.content = content;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof VideoProgramEpisode)) return false;
    VideoProgramEpisode o = (VideoProgramEpisode) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(number, o.number)
        && Internal.equals(title, o.title)
        && Internal.equals(content, o.content);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (number != null ? number.hashCode() : 0);
      result = result * 37 + (title != null ? title.hashCode() : 0);
      result = result * 37 + (content != null ? content.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (number != null) builder.append(", number=").append(number);
    if (title != null) builder.append(", title=").append(title);
    if (content != null) builder.append(", content=").append(content);
    return builder.replace(0, 2, "VideoProgramEpisode{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<VideoProgramEpisode, Builder> {
    public Integer number;

    public String title;

    public String content;

    public Builder() {
    }

    /**
     * / エピソード番号
     */
    public Builder number(Integer number) {
      this.number = number;
      return this;
    }

    /**
     * / タイトル
     */
    public Builder title(String title) {
      this.title = title;
      return this;
    }

    /**
     * / コンテンツ
     */
    public Builder content(String content) {
      this.content = content;
      return this;
    }

    @Override
    public VideoProgramEpisode build() {
      return new VideoProgramEpisode(number, title, content, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_VideoProgramEpisode extends ProtoAdapter<VideoProgramEpisode> {
    ProtoAdapter_VideoProgramEpisode() {
      super(FieldEncoding.LENGTH_DELIMITED, VideoProgramEpisode.class);
    }

    @Override
    public int encodedSize(VideoProgramEpisode value) {
      return (value.number != null ? ProtoAdapter.INT32.encodedSizeWithTag(1, value.number) : 0)
          + (value.title != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.title) : 0)
          + (value.content != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.content) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, VideoProgramEpisode value) throws IOException {
      if (value.number != null) ProtoAdapter.INT32.encodeWithTag(writer, 1, value.number);
      if (value.title != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.title);
      if (value.content != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.content);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public VideoProgramEpisode decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.number(ProtoAdapter.INT32.decode(reader)); break;
          case 2: builder.title(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.content(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public VideoProgramEpisode redact(VideoProgramEpisode value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
