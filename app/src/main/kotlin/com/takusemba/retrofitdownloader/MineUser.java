// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/track.proto at 46:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class MineUser extends Message<MineUser, MineUser.Builder> {
  public static final ProtoAdapter<MineUser> ADAPTER = new ProtoAdapter_MineUser();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_SERVICEUSERID = "";

  public static final Boolean DEFAULT_ACTIVEUSER = false;

  public static final String DEFAULT_STATUS = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceUserId;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean activeUser;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String status;

  public MineUser(String serviceUserId, Boolean activeUser, String status) {
    this(serviceUserId, activeUser, status, ByteString.EMPTY);
  }

  public MineUser(String serviceUserId, Boolean activeUser, String status, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.serviceUserId = serviceUserId;
    this.activeUser = activeUser;
    this.status = status;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.serviceUserId = serviceUserId;
    builder.activeUser = activeUser;
    builder.status = status;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof MineUser)) return false;
    MineUser o = (MineUser) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(serviceUserId, o.serviceUserId)
        && Internal.equals(activeUser, o.activeUser)
        && Internal.equals(status, o.status);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (serviceUserId != null ? serviceUserId.hashCode() : 0);
      result = result * 37 + (activeUser != null ? activeUser.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (serviceUserId != null) builder.append(", serviceUserId=").append(serviceUserId);
    if (activeUser != null) builder.append(", activeUser=").append(activeUser);
    if (status != null) builder.append(", status=").append(status);
    return builder.replace(0, 2, "MineUser{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<MineUser, Builder> {
    public String serviceUserId;

    public Boolean activeUser;

    public String status;

    public Builder() {
    }

    public Builder serviceUserId(String serviceUserId) {
      this.serviceUserId = serviceUserId;
      return this;
    }

    public Builder activeUser(Boolean activeUser) {
      this.activeUser = activeUser;
      return this;
    }

    public Builder status(String status) {
      this.status = status;
      return this;
    }

    @Override
    public MineUser build() {
      return new MineUser(serviceUserId, activeUser, status, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_MineUser extends ProtoAdapter<MineUser> {
    ProtoAdapter_MineUser() {
      super(FieldEncoding.LENGTH_DELIMITED, MineUser.class);
    }

    @Override
    public int encodedSize(MineUser value) {
      return (value.serviceUserId != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.serviceUserId) : 0)
          + (value.activeUser != null ? ProtoAdapter.BOOL.encodedSizeWithTag(2, value.activeUser) : 0)
          + (value.status != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.status) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, MineUser value) throws IOException {
      if (value.serviceUserId != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.serviceUserId);
      if (value.activeUser != null) ProtoAdapter.BOOL.encodeWithTag(writer, 2, value.activeUser);
      if (value.status != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.status);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public MineUser decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.serviceUserId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.activeUser(ProtoAdapter.BOOL.decode(reader)); break;
          case 3: builder.status(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public MineUser redact(MineUser value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
