// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/user.proto at 54:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireEnum;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / ユーザー購読情報
 */
public final class UserSubscription extends Message<UserSubscription, UserSubscription.Builder> {
  public static final ProtoAdapter<UserSubscription> ADAPTER = new ProtoAdapter_UserSubscription();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_PRODUCTID = "";

  public static final Long DEFAULT_EXPIRE = 0L;

  public static final PurchaseType DEFAULT_PURCHASETYPE = PurchaseType.NONE;

  public static final Long DEFAULT_CANCELEDAT = 0L;

  public static final Boolean DEFAULT_ISTRIAL = false;

  /**
   * / 製品ID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String productId;

  /**
   * / 有効期限
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long expire;

  /**
   * / 購入媒体タイプ
   */
  @WireField(
      tag = 3,
      adapter = "tv.abema.protos.UserSubscription$PurchaseType#ADAPTER"
  )
  public final PurchaseType purchaseType;

  /**
   * / キャンセル日時(クレジットのみ)
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long canceledAt;

  /**
   * / トライアルかどうか
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean isTrial;

  public UserSubscription(String productId, Long expire, PurchaseType purchaseType, Long canceledAt, Boolean isTrial) {
    this(productId, expire, purchaseType, canceledAt, isTrial, ByteString.EMPTY);
  }

  public UserSubscription(String productId, Long expire, PurchaseType purchaseType, Long canceledAt, Boolean isTrial, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.productId = productId;
    this.expire = expire;
    this.purchaseType = purchaseType;
    this.canceledAt = canceledAt;
    this.isTrial = isTrial;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.productId = productId;
    builder.expire = expire;
    builder.purchaseType = purchaseType;
    builder.canceledAt = canceledAt;
    builder.isTrial = isTrial;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserSubscription)) return false;
    UserSubscription o = (UserSubscription) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(productId, o.productId)
        && Internal.equals(expire, o.expire)
        && Internal.equals(purchaseType, o.purchaseType)
        && Internal.equals(canceledAt, o.canceledAt)
        && Internal.equals(isTrial, o.isTrial);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (productId != null ? productId.hashCode() : 0);
      result = result * 37 + (expire != null ? expire.hashCode() : 0);
      result = result * 37 + (purchaseType != null ? purchaseType.hashCode() : 0);
      result = result * 37 + (canceledAt != null ? canceledAt.hashCode() : 0);
      result = result * 37 + (isTrial != null ? isTrial.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (productId != null) builder.append(", productId=").append(productId);
    if (expire != null) builder.append(", expire=").append(expire);
    if (purchaseType != null) builder.append(", purchaseType=").append(purchaseType);
    if (canceledAt != null) builder.append(", canceledAt=").append(canceledAt);
    if (isTrial != null) builder.append(", isTrial=").append(isTrial);
    return builder.replace(0, 2, "UserSubscription{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<UserSubscription, Builder> {
    public String productId;

    public Long expire;

    public PurchaseType purchaseType;

    public Long canceledAt;

    public Boolean isTrial;

    public Builder() {
    }

    /**
     * / 製品ID
     */
    public Builder productId(String productId) {
      this.productId = productId;
      return this;
    }

    /**
     * / 有効期限
     */
    public Builder expire(Long expire) {
      this.expire = expire;
      return this;
    }

    /**
     * / 購入媒体タイプ
     */
    public Builder purchaseType(PurchaseType purchaseType) {
      this.purchaseType = purchaseType;
      return this;
    }

    /**
     * / キャンセル日時(クレジットのみ)
     */
    public Builder canceledAt(Long canceledAt) {
      this.canceledAt = canceledAt;
      return this;
    }

    /**
     * / トライアルかどうか
     */
    public Builder isTrial(Boolean isTrial) {
      this.isTrial = isTrial;
      return this;
    }

    @Override
    public UserSubscription build() {
      return new UserSubscription(productId, expire, purchaseType, canceledAt, isTrial, buildUnknownFields());
    }
  }

  public enum PurchaseType implements WireEnum {
    /**
     * / なし
     */
    NONE(0),

    /**
     * / Apple
     */
    APPLE(1),

    /**
     * / Google
     */
    GOOGLE(2),

    /**
     * / クレジットカード
     */
    CREDIT(3),

    /**
     * / au
     */
    AU(4),

    /**
     * / docomo
     */
    DOCOMO(5),

    /**
     * / SoftBank
     */
    SOFTBANK(6),

    /**
     * / Amazon
     */
    AMAZON(7);

    public static final ProtoAdapter<PurchaseType> ADAPTER = ProtoAdapter.newEnumAdapter(PurchaseType.class);

    private final int value;

    PurchaseType(int value) {
      this.value = value;
    }

    /**
     * Return the constant for {@code value} or null.
     */
    public static PurchaseType fromValue(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return APPLE;
        case 2: return GOOGLE;
        case 3: return CREDIT;
        case 4: return AU;
        case 5: return DOCOMO;
        case 6: return SOFTBANK;
        case 7: return AMAZON;
        default: return null;
      }
    }

    @Override
    public int getValue() {
      return value;
    }
  }

  private static final class ProtoAdapter_UserSubscription extends ProtoAdapter<UserSubscription> {
    ProtoAdapter_UserSubscription() {
      super(FieldEncoding.LENGTH_DELIMITED, UserSubscription.class);
    }

    @Override
    public int encodedSize(UserSubscription value) {
      return (value.productId != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.productId) : 0)
          + (value.expire != null ? ProtoAdapter.INT64.encodedSizeWithTag(2, value.expire) : 0)
          + (value.purchaseType != null ? PurchaseType.ADAPTER.encodedSizeWithTag(3, value.purchaseType) : 0)
          + (value.canceledAt != null ? ProtoAdapter.INT64.encodedSizeWithTag(4, value.canceledAt) : 0)
          + (value.isTrial != null ? ProtoAdapter.BOOL.encodedSizeWithTag(5, value.isTrial) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UserSubscription value) throws IOException {
      if (value.productId != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.productId);
      if (value.expire != null) ProtoAdapter.INT64.encodeWithTag(writer, 2, value.expire);
      if (value.purchaseType != null) PurchaseType.ADAPTER.encodeWithTag(writer, 3, value.purchaseType);
      if (value.canceledAt != null) ProtoAdapter.INT64.encodeWithTag(writer, 4, value.canceledAt);
      if (value.isTrial != null) ProtoAdapter.BOOL.encodeWithTag(writer, 5, value.isTrial);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UserSubscription decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.productId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.expire(ProtoAdapter.INT64.decode(reader)); break;
          case 3: {
            try {
              builder.purchaseType(PurchaseType.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 4: builder.canceledAt(ProtoAdapter.INT64.decode(reader)); break;
          case 5: builder.isTrial(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UserSubscription redact(UserSubscription value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
