// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/ranking.proto at 12:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / A RankingSlot is a element of ranking.
 */
public final class RankingSlot extends Message<RankingSlot, RankingSlot.Builder> {
  public static final ProtoAdapter<RankingSlot> ADAPTER = new ProtoAdapter_RankingSlot();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ID = "";

  public static final String DEFAULT_CHANNELID = "";

  public static final String DEFAULT_DISPLAYPROGRAMID = "";

  public static final String DEFAULT_TITLE = "";

  public static final String DEFAULT_HIGHLIGHT = "";

  public static final Long DEFAULT_STARTAT = 0L;

  public static final Long DEFAULT_ENDAT = 0L;

  public static final Long DEFAULT_DISPLAYIMAGEUPDATEDAT = 0L;

  public static final Boolean DEFAULT_LIVE = false;

  public static final Boolean DEFAULT_FIRST = false;

  public static final Long DEFAULT_RANK = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String id;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String channelId;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String displayProgramId;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String title;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String highlight;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long startAt;

  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long endAt;

  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long displayImageUpdatedAt;

  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean live;

  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean first;

  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long rank;

  @WireField(
      tag = 12,
      adapter = "tv.abema.protos.RankingAudience#ADAPTER"
  )
  public final RankingAudience audience;

  public RankingSlot(String id, String channelId, String displayProgramId, String title, String highlight, Long startAt, Long endAt, Long displayImageUpdatedAt, Boolean live, Boolean first, Long rank, RankingAudience audience) {
    this(id, channelId, displayProgramId, title, highlight, startAt, endAt, displayImageUpdatedAt, live, first, rank, audience, ByteString.EMPTY);
  }

  public RankingSlot(String id, String channelId, String displayProgramId, String title, String highlight, Long startAt, Long endAt, Long displayImageUpdatedAt, Boolean live, Boolean first, Long rank, RankingAudience audience, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.channelId = channelId;
    this.displayProgramId = displayProgramId;
    this.title = title;
    this.highlight = highlight;
    this.startAt = startAt;
    this.endAt = endAt;
    this.displayImageUpdatedAt = displayImageUpdatedAt;
    this.live = live;
    this.first = first;
    this.rank = rank;
    this.audience = audience;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.channelId = channelId;
    builder.displayProgramId = displayProgramId;
    builder.title = title;
    builder.highlight = highlight;
    builder.startAt = startAt;
    builder.endAt = endAt;
    builder.displayImageUpdatedAt = displayImageUpdatedAt;
    builder.live = live;
    builder.first = first;
    builder.rank = rank;
    builder.audience = audience;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RankingSlot)) return false;
    RankingSlot o = (RankingSlot) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(channelId, o.channelId)
        && Internal.equals(displayProgramId, o.displayProgramId)
        && Internal.equals(title, o.title)
        && Internal.equals(highlight, o.highlight)
        && Internal.equals(startAt, o.startAt)
        && Internal.equals(endAt, o.endAt)
        && Internal.equals(displayImageUpdatedAt, o.displayImageUpdatedAt)
        && Internal.equals(live, o.live)
        && Internal.equals(first, o.first)
        && Internal.equals(rank, o.rank)
        && Internal.equals(audience, o.audience);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (channelId != null ? channelId.hashCode() : 0);
      result = result * 37 + (displayProgramId != null ? displayProgramId.hashCode() : 0);
      result = result * 37 + (title != null ? title.hashCode() : 0);
      result = result * 37 + (highlight != null ? highlight.hashCode() : 0);
      result = result * 37 + (startAt != null ? startAt.hashCode() : 0);
      result = result * 37 + (endAt != null ? endAt.hashCode() : 0);
      result = result * 37 + (displayImageUpdatedAt != null ? displayImageUpdatedAt.hashCode() : 0);
      result = result * 37 + (live != null ? live.hashCode() : 0);
      result = result * 37 + (first != null ? first.hashCode() : 0);
      result = result * 37 + (rank != null ? rank.hashCode() : 0);
      result = result * 37 + (audience != null ? audience.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (channelId != null) builder.append(", channelId=").append(channelId);
    if (displayProgramId != null) builder.append(", displayProgramId=").append(displayProgramId);
    if (title != null) builder.append(", title=").append(title);
    if (highlight != null) builder.append(", highlight=").append(highlight);
    if (startAt != null) builder.append(", startAt=").append(startAt);
    if (endAt != null) builder.append(", endAt=").append(endAt);
    if (displayImageUpdatedAt != null) builder.append(", displayImageUpdatedAt=").append(displayImageUpdatedAt);
    if (live != null) builder.append(", live=").append(live);
    if (first != null) builder.append(", first=").append(first);
    if (rank != null) builder.append(", rank=").append(rank);
    if (audience != null) builder.append(", audience=").append(audience);
    return builder.replace(0, 2, "RankingSlot{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<RankingSlot, Builder> {
    public String id;

    public String channelId;

    public String displayProgramId;

    public String title;

    public String highlight;

    public Long startAt;

    public Long endAt;

    public Long displayImageUpdatedAt;

    public Boolean live;

    public Boolean first;

    public Long rank;

    public RankingAudience audience;

    public Builder() {
    }

    public Builder id(String id) {
      this.id = id;
      return this;
    }

    public Builder channelId(String channelId) {
      this.channelId = channelId;
      return this;
    }

    public Builder displayProgramId(String displayProgramId) {
      this.displayProgramId = displayProgramId;
      return this;
    }

    public Builder title(String title) {
      this.title = title;
      return this;
    }

    public Builder highlight(String highlight) {
      this.highlight = highlight;
      return this;
    }

    public Builder startAt(Long startAt) {
      this.startAt = startAt;
      return this;
    }

    public Builder endAt(Long endAt) {
      this.endAt = endAt;
      return this;
    }

    public Builder displayImageUpdatedAt(Long displayImageUpdatedAt) {
      this.displayImageUpdatedAt = displayImageUpdatedAt;
      return this;
    }

    public Builder live(Boolean live) {
      this.live = live;
      return this;
    }

    public Builder first(Boolean first) {
      this.first = first;
      return this;
    }

    public Builder rank(Long rank) {
      this.rank = rank;
      return this;
    }

    public Builder audience(RankingAudience audience) {
      this.audience = audience;
      return this;
    }

    @Override
    public RankingSlot build() {
      return new RankingSlot(id, channelId, displayProgramId, title, highlight, startAt, endAt, displayImageUpdatedAt, live, first, rank, audience, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_RankingSlot extends ProtoAdapter<RankingSlot> {
    ProtoAdapter_RankingSlot() {
      super(FieldEncoding.LENGTH_DELIMITED, RankingSlot.class);
    }

    @Override
    public int encodedSize(RankingSlot value) {
      return (value.id != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.id) : 0)
          + (value.channelId != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.channelId) : 0)
          + (value.displayProgramId != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.displayProgramId) : 0)
          + (value.title != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.title) : 0)
          + (value.highlight != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.highlight) : 0)
          + (value.startAt != null ? ProtoAdapter.INT64.encodedSizeWithTag(6, value.startAt) : 0)
          + (value.endAt != null ? ProtoAdapter.INT64.encodedSizeWithTag(7, value.endAt) : 0)
          + (value.displayImageUpdatedAt != null ? ProtoAdapter.INT64.encodedSizeWithTag(8, value.displayImageUpdatedAt) : 0)
          + (value.live != null ? ProtoAdapter.BOOL.encodedSizeWithTag(9, value.live) : 0)
          + (value.first != null ? ProtoAdapter.BOOL.encodedSizeWithTag(10, value.first) : 0)
          + (value.rank != null ? ProtoAdapter.INT64.encodedSizeWithTag(11, value.rank) : 0)
          + (value.audience != null ? RankingAudience.ADAPTER.encodedSizeWithTag(12, value.audience) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, RankingSlot value) throws IOException {
      if (value.id != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.id);
      if (value.channelId != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.channelId);
      if (value.displayProgramId != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.displayProgramId);
      if (value.title != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.title);
      if (value.highlight != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.highlight);
      if (value.startAt != null) ProtoAdapter.INT64.encodeWithTag(writer, 6, value.startAt);
      if (value.endAt != null) ProtoAdapter.INT64.encodeWithTag(writer, 7, value.endAt);
      if (value.displayImageUpdatedAt != null) ProtoAdapter.INT64.encodeWithTag(writer, 8, value.displayImageUpdatedAt);
      if (value.live != null) ProtoAdapter.BOOL.encodeWithTag(writer, 9, value.live);
      if (value.first != null) ProtoAdapter.BOOL.encodeWithTag(writer, 10, value.first);
      if (value.rank != null) ProtoAdapter.INT64.encodeWithTag(writer, 11, value.rank);
      if (value.audience != null) RankingAudience.ADAPTER.encodeWithTag(writer, 12, value.audience);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public RankingSlot decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.channelId(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.displayProgramId(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.title(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.highlight(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.startAt(ProtoAdapter.INT64.decode(reader)); break;
          case 7: builder.endAt(ProtoAdapter.INT64.decode(reader)); break;
          case 8: builder.displayImageUpdatedAt(ProtoAdapter.INT64.decode(reader)); break;
          case 9: builder.live(ProtoAdapter.BOOL.decode(reader)); break;
          case 10: builder.first(ProtoAdapter.BOOL.decode(reader)); break;
          case 11: builder.rank(ProtoAdapter.INT64.decode(reader)); break;
          case 12: builder.audience(RankingAudience.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public RankingSlot redact(RankingSlot value) {
      Builder builder = value.newBuilder();
      if (builder.audience != null) builder.audience = RankingAudience.ADAPTER.redact(builder.audience);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
