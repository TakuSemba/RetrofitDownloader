// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/share.proto at 11:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class SlotShare extends Message<SlotShare, SlotShare.Builder> {
  public static final ProtoAdapter<SlotShare> ADAPTER = new ProtoAdapter_SlotShare();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ELAPSED = 0L;

  /**
   * / Share on Twitter
   */
  @WireField(
      tag = 1,
      adapter = "tv.abema.protos.TwitterSlotShare#ADAPTER"
  )
  public final TwitterSlotShare twitter;

  /**
   * reserved 2 to 9; /// Reserved for supporting multi sns providers
   * reserved "facebook", "google"; /// Reserved for supporting multi sns providers
   * / Elapsed play time (unix time)
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long elapsed;

  public SlotShare(TwitterSlotShare twitter, Long elapsed) {
    this(twitter, elapsed, ByteString.EMPTY);
  }

  public SlotShare(TwitterSlotShare twitter, Long elapsed, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.twitter = twitter;
    this.elapsed = elapsed;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.twitter = twitter;
    builder.elapsed = elapsed;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SlotShare)) return false;
    SlotShare o = (SlotShare) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(twitter, o.twitter)
        && Internal.equals(elapsed, o.elapsed);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (twitter != null ? twitter.hashCode() : 0);
      result = result * 37 + (elapsed != null ? elapsed.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (twitter != null) builder.append(", twitter=").append(twitter);
    if (elapsed != null) builder.append(", elapsed=").append(elapsed);
    return builder.replace(0, 2, "SlotShare{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<SlotShare, Builder> {
    public TwitterSlotShare twitter;

    public Long elapsed;

    public Builder() {
    }

    /**
     * / Share on Twitter
     */
    public Builder twitter(TwitterSlotShare twitter) {
      this.twitter = twitter;
      return this;
    }

    /**
     * reserved 2 to 9; /// Reserved for supporting multi sns providers
     * reserved "facebook", "google"; /// Reserved for supporting multi sns providers
     * / Elapsed play time (unix time)
     */
    public Builder elapsed(Long elapsed) {
      this.elapsed = elapsed;
      return this;
    }

    @Override
    public SlotShare build() {
      return new SlotShare(twitter, elapsed, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SlotShare extends ProtoAdapter<SlotShare> {
    ProtoAdapter_SlotShare() {
      super(FieldEncoding.LENGTH_DELIMITED, SlotShare.class);
    }

    @Override
    public int encodedSize(SlotShare value) {
      return (value.twitter != null ? TwitterSlotShare.ADAPTER.encodedSizeWithTag(1, value.twitter) : 0)
          + (value.elapsed != null ? ProtoAdapter.INT64.encodedSizeWithTag(10, value.elapsed) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SlotShare value) throws IOException {
      if (value.twitter != null) TwitterSlotShare.ADAPTER.encodeWithTag(writer, 1, value.twitter);
      if (value.elapsed != null) ProtoAdapter.INT64.encodeWithTag(writer, 10, value.elapsed);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SlotShare decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.twitter(TwitterSlotShare.ADAPTER.decode(reader)); break;
          case 10: builder.elapsed(ProtoAdapter.INT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SlotShare redact(SlotShare value) {
      Builder builder = value.newBuilder();
      if (builder.twitter != null) builder.twitter = TwitterSlotShare.ADAPTER.redact(builder.twitter);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
