// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: api/video_viewing.proto at 11:1
package tv.abema.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireEnum;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * / ビデオ視聴履歴
 */
public final class VideoViewingHistory extends Message<VideoViewingHistory, VideoViewingHistory.Builder> {
  public static final ProtoAdapter<VideoViewingHistory> ADAPTER = new ProtoAdapter_VideoViewingHistory();

  private static final long serialVersionUID = 0L;

  public static final Type DEFAULT_TYPE = Type.UNKNOWN;

  public static final String DEFAULT_SOURCEID = "";

  public static final Long DEFAULT_POSITION = 0L;

  public static final Long DEFAULT_LASTVIEWINGATMS = 0L;

  public static final Boolean DEFAULT_COMPLETED = false;

  /**
   * / 視聴タイプ
   */
  @WireField(
      tag = 1,
      adapter = "tv.abema.protos.VideoViewingHistory$Type#ADAPTER"
  )
  public final Type type;

  /**
   * / 視聴タイプがTimeshiftの場合はスロットID, VODの場合はプログラムIDがセットされる
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String sourceId;

  /**
   * / 再生位置（先頭からの経過秒）
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long position;

  /**
   * / 最終視聴UNIX時間（ミリ秒）
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long lastViewingAtMs;

  /**
   * / 視聴完了済みの場合はTrueがセットされる
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean completed;

  public VideoViewingHistory(Type type, String sourceId, Long position, Long lastViewingAtMs, Boolean completed) {
    this(type, sourceId, position, lastViewingAtMs, completed, ByteString.EMPTY);
  }

  public VideoViewingHistory(Type type, String sourceId, Long position, Long lastViewingAtMs, Boolean completed, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.type = type;
    this.sourceId = sourceId;
    this.position = position;
    this.lastViewingAtMs = lastViewingAtMs;
    this.completed = completed;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.type = type;
    builder.sourceId = sourceId;
    builder.position = position;
    builder.lastViewingAtMs = lastViewingAtMs;
    builder.completed = completed;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof VideoViewingHistory)) return false;
    VideoViewingHistory o = (VideoViewingHistory) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(type, o.type)
        && Internal.equals(sourceId, o.sourceId)
        && Internal.equals(position, o.position)
        && Internal.equals(lastViewingAtMs, o.lastViewingAtMs)
        && Internal.equals(completed, o.completed);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (sourceId != null ? sourceId.hashCode() : 0);
      result = result * 37 + (position != null ? position.hashCode() : 0);
      result = result * 37 + (lastViewingAtMs != null ? lastViewingAtMs.hashCode() : 0);
      result = result * 37 + (completed != null ? completed.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (type != null) builder.append(", type=").append(type);
    if (sourceId != null) builder.append(", sourceId=").append(sourceId);
    if (position != null) builder.append(", position=").append(position);
    if (lastViewingAtMs != null) builder.append(", lastViewingAtMs=").append(lastViewingAtMs);
    if (completed != null) builder.append(", completed=").append(completed);
    return builder.replace(0, 2, "VideoViewingHistory{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<VideoViewingHistory, Builder> {
    public Type type;

    public String sourceId;

    public Long position;

    public Long lastViewingAtMs;

    public Boolean completed;

    public Builder() {
    }

    /**
     * / 視聴タイプ
     */
    public Builder type(Type type) {
      this.type = type;
      return this;
    }

    /**
     * / 視聴タイプがTimeshiftの場合はスロットID, VODの場合はプログラムIDがセットされる
     */
    public Builder sourceId(String sourceId) {
      this.sourceId = sourceId;
      return this;
    }

    /**
     * / 再生位置（先頭からの経過秒）
     */
    public Builder position(Long position) {
      this.position = position;
      return this;
    }

    /**
     * / 最終視聴UNIX時間（ミリ秒）
     */
    public Builder lastViewingAtMs(Long lastViewingAtMs) {
      this.lastViewingAtMs = lastViewingAtMs;
      return this;
    }

    /**
     * / 視聴完了済みの場合はTrueがセットされる
     */
    public Builder completed(Boolean completed) {
      this.completed = completed;
      return this;
    }

    @Override
    public VideoViewingHistory build() {
      return new VideoViewingHistory(type, sourceId, position, lastViewingAtMs, completed, buildUnknownFields());
    }
  }

  public enum Type implements WireEnum {
    /**
     * / Unknown (for default value)
     */
    UNKNOWN(0),

    /**
     * / Timeshift
     */
    TIMESHIFT(1),

    /**
     * / VOD
     */
    VOD(2);

    public static final ProtoAdapter<Type> ADAPTER = ProtoAdapter.newEnumAdapter(Type.class);

    private final int value;

    Type(int value) {
      this.value = value;
    }

    /**
     * Return the constant for {@code value} or null.
     */
    public static Type fromValue(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return TIMESHIFT;
        case 2: return VOD;
        default: return null;
      }
    }

    @Override
    public int getValue() {
      return value;
    }
  }

  private static final class ProtoAdapter_VideoViewingHistory extends ProtoAdapter<VideoViewingHistory> {
    ProtoAdapter_VideoViewingHistory() {
      super(FieldEncoding.LENGTH_DELIMITED, VideoViewingHistory.class);
    }

    @Override
    public int encodedSize(VideoViewingHistory value) {
      return (value.type != null ? Type.ADAPTER.encodedSizeWithTag(1, value.type) : 0)
          + (value.sourceId != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.sourceId) : 0)
          + (value.position != null ? ProtoAdapter.INT64.encodedSizeWithTag(3, value.position) : 0)
          + (value.lastViewingAtMs != null ? ProtoAdapter.INT64.encodedSizeWithTag(4, value.lastViewingAtMs) : 0)
          + (value.completed != null ? ProtoAdapter.BOOL.encodedSizeWithTag(5, value.completed) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, VideoViewingHistory value) throws IOException {
      if (value.type != null) Type.ADAPTER.encodeWithTag(writer, 1, value.type);
      if (value.sourceId != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.sourceId);
      if (value.position != null) ProtoAdapter.INT64.encodeWithTag(writer, 3, value.position);
      if (value.lastViewingAtMs != null) ProtoAdapter.INT64.encodeWithTag(writer, 4, value.lastViewingAtMs);
      if (value.completed != null) ProtoAdapter.BOOL.encodeWithTag(writer, 5, value.completed);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public VideoViewingHistory decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: {
            try {
              builder.type(Type.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 2: builder.sourceId(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.position(ProtoAdapter.INT64.decode(reader)); break;
          case 4: builder.lastViewingAtMs(ProtoAdapter.INT64.decode(reader)); break;
          case 5: builder.completed(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public VideoViewingHistory redact(VideoViewingHistory value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
